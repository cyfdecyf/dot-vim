*permuted-index*  (see http://www.teamten.com/lawrence/projects/vim_permuted_index/)

'toolbariconsize'               size of the toolbar icons (for GTK 2 only)
'shortname'                  non-MS-DOS: Filenames assumed to be 8.3 chars
|:py3|                                              execute Python 3 command
|:py3file|                                          execute Python 3 script file
'shortname'                    non-MS-DOS: Filenames assumed to be 8.3 chars
'hidden'                           don't unload buffer when it is |abandon|ed
|:iabbrev|                                                  like ":abbrev" but for Insert mode
|:cabbrev|                                                  like ":abbreviate" but for Command-line mode
|:abbreviate|                                                enter abbreviation
|:unabbreviate|                                             remove abbreviation
|:noreabbrev|                                             enter an abbreviation that will not be remapped
|:abclear|                                              remove all abbreviations
|:cabclear|                                              clear all abbreviations for Command-line mode
|:iabclear|                                                 like ":abclear" but for Insert mode
|:try|                                           execute commands, abort on error or exception
|:spellinfo|                                             show info about loaded spell files
'confirm'                                           ask what to do about unsaved/read-only files
|:aboveleft|                      make split window appear left or above
|:leftabove|                      make split window appear left or above
'scrolloff'                                   minimum nr. of lines above and below cursor
'imactivatekey'                                           key that activates the X input method
|:breakadd|                                                        add a debugger breakpoint
|:menutranslate|                                                   add a menu translation item
'cinwords'                              words where 'si' and 'cin' add an indent
|:badd|                                                            add buffer to the buffer list
|:caddfile|                                                        add error message to current quickfix list
|:caddbuffer|                                                      add errors from buffer
|:caddexpr|                                                        add errors from expr
|:spellgood|                                                       add good word for spelling
|:argedit|                                                         add item to the argument list and edit it
|:argadd|                                                          add items to the argument list
|:laddbuffer|                                                      add locations from buffer
|:laddexpr|                                                        add locations from expr
|:laddfile|                                                        add locations to current location list
|:ltag|                                            jump to tag and add matching tags to the location list
|:cmenu|                                                           add menu for Command-line mode
|:imenu|                                                           add menu for Insert mode
|:nmenu|                                                           add menu for Normal mode
|:omenu|                                                           add menu for Operator-pending mode
|:smenu|                                                           add menu for Select mode
|:xmenu|                                                           add menu for Visual mode
|:vmenu|                                                           add menu for Visual+Select mode
|:spellwrong|                                                      add spelling mistake
'suffixesadd'                                             suffixes added when searching for a file
'cscopeverbose'                                 give messages when adding a cscope database
'infercase'                                                        adjust case of match for keyword completion
'joinspaces'                                            two spaces after a period with a join command
'fsync'                                  whether to invoke fsync() after file write
'backup'                                          keep backup file after overwriting a file
'updatecount'                                                      after this many characters flush swap file
'updatetime'                                                       after this many milliseconds flush swap file
'path'                   list of directories searched with "gf" et.al.
'aleph'                                   ASCII code of the letter Aleph (Hebrew)
'ttytype'                                                          alias for 'term'
|:left|                                                       left align lines
|:right|                                                     right align text
|:wall|                                                      write all (changed) buffers
|:abclear|                                                  remove all abbreviations
|:cabclear|                                                  clear all abbreviations for Command-line mode
|:spellrepall|                                             replace all bad words like last |z=|
|:ls|                                                         list all buffers
'maxmemtot'                     maximum memory (in Kbyte) used for all buffers
|:wqall|                                                     write all changed buffers and quit Vim
|:spelldump|                            split window and fill with all correct words
'debug'                                        set to "msg" to see all error messages
|:clist|                                                      list all errors
|:buffers|                                                    list all files in the buffer list
|:files|                                                      list all files in the buffer list
'foldenable'                                        set to display all folds open
|:argdo|                                           do a command on all items in the argument list
|:doautoall|                                apply autocommands for all loaded buffers
|:llist|                                                      list all locations
|:cmapclear|                                                 clear all mappings for Command-line mode
|:mapclear|                                                  clear all mappings for Normal and Visual mode
|:nmapclear|                                                 clear all mappings for Normal mode
|:omapclear|                                                remove all mappings for Operator-pending mode
|:smapclear|                                                remove all mappings for Select mode
|:xmapclear|                                                remove all mappings for Visual mode
|:vmapclear|                                                remove all mappings for Visual+Select mode
|:marks|                                                      list all marks
|:amenu|                                   enter new menu item for all modes
|:aunmenu|                                         remove menu for all modes
|:anoremenu|                                  enter a new menu for all modes that will not be remapped
|:scriptnames|                                       list names of all sourced Vim scripts
|:tabonly|                                                   close all tab pages except the current one
|:preserve|                                                  write all text to swap file
|:comclear|                                                  clear all user-defined commands
|:only|                                                      close all windows except the current one
'tabpagemax'         maximum number of tab pages for |-p| and "tab all"
'allowrevins'                                                      allow CTRL-_ in Insert and Command-line mode
'remap'                                                            allow mappings to work recursively
'paste'                                                            allow pasting text
'opendevice'                                                       allow reading/writing devices on MS-Windows
'whichwrap'                                                        allow specified keys to cross line boundaries
'write'                                       writing to a file is allowed
'langmap'                                                          alphabetic characters for other language mode
|:setfiletype|                   set 'filetype', unless it was set already
'wildcharm'                                    like 'wildchar' but also works when mapped
|:simalt|                              Win32 GUI: simulate Windows ALT key
'winaltkeys'                       when the windows system handles ALT keys
|:keepalt|                             following command keeps the alternate file
'ambiwidth'                       what to do with Unicode chars of ambiguous width
'shelltype'                                                        Amiga: influences how to use a shell
'switchbuf'                        sets behavior when switching to another buffer
|:diffsplit|                                 show differences with another file
|:saveas|                                          save file under another name.
'antialias'                                  Mac OS X: use smooth, antialiased fonts
'imdisable'                                   do not use the IM in any mode
'winminwidth'                        minimal number of columns for any window
'winminheight'                         minimum number of lines for any window
|:botright|                                      make split window appear at bottom or far right
|:topleft|                                       make split window appear at top or far left
|:aboveleft|                                     make split window appear left or above
|:leftabove|                                     make split window appear left or above
|:belowright|                                    make split window appear right or below
|:rightbelow|                                    make split window appear right or below
|:append|                                                          append text
|:grepadd|                                         like :grep, but append to current list
|:lgrepadd|                                        like :grep, but append to current list
|:lvimgrepadd|                                  like :vimgrep, but append to current list
|:vimgrepadd|                                   like :vimgrep, but append to current list
|:diffpatch|                                                       apply a patch and show differences
|:doautoall|                                                       apply autocommands for all loaded buffers
|:doautocmd|                                                       apply autocommands to current buffer
'arabic'                                                       for Arabic as a default second language
'arabicshape'                                       do shaping for Arabic characters
|:lmap|                             like ":map!" but includes Lang-Arg mode
|:lmapclear|                   like ":mapclear!" but includes Lang-Arg mode
|:lnoremap|                     like ":noremap!" but includes Lang-Arg mode
|:lunmap|                         like ":unmap!" but includes Lang-Arg mode
|:argadd|                                         add items to the argument list
|:arglocal|                                         define a local argument list
|:argglobal|                                     define the global argument list
|:argdelete|                                 delete items from the argument list
|:argdo|                          do a command on all items in the argument list
|:next|                                     go to next file in the argument list
|:previous|                                 go to previous file in argument list
|:Next|                                 go to previous file in the argument list
|:argument|                             go to specific file in the argument list
|:first|                               go to the first file in the argument list
|:rewind|                              go to the first file in the argument list
|:last|                                 go to the last file in the argument list
|:sall|                             open a window for each file in argument list
|:all|                          open a window for each file in the argument list
|:args|                                                  print the argument list
|:sfirst|                 split window and go to first file in the argument list
|:srewind|                split window and go to first file in the argument list
|:slast|                   split window and go to last file in the argument list
|:snext|                   split window and go to next file in the argument list
|:sNext|                   split window and go to previous file in argument list
|:sprevious|           split window and go to previous file in the argument list
|:sargument|               split window and go to specific file in argument list
|:wnext|                    write to a file and go to next file in argument list
|:wNext|                write to a file and go to previous file in argument list
|:wprevious|            write to a file and go to previous file in argument list
|:argedit|                                         add item to the argument list and edit it
'shellquote'                                quote character(s) for around shell command
'wrapscan'                                           searches wrap around the end of the file
'aleph'                                                            ASCII code of the letter Aleph (Hebrew)
|:ascii|                                                     print ascii value of character under the cursor
|:X|                                                               ask for encryption key
'confirm'                                                          ask what to do about unsaved/read-only files
|:let|                                                             assign a value to a variable or option
'shortname'                                  non-MS-DOS: Filenames assumed to be 8.3 chars
'linebreak'                                        wrap long lines at a blank
|:botright|                               make split window appear at bottom or far right
'backspace'                                    how backspace works at start of line
'modeline'                                     recognize modelines at start or end of file
|:center|                                             format lines at the center
'showbreak'                                          string to use at the start of wrapped lines
|:topleft|                                make split window appear at top or far left
'macatsui'                                            Mac GUI: use ATSUI text drawing
'shiftwidth'                          number of spaces to use for (auto)indent step
'eventignore'                                                      autocommand events that are ignored
|:augroup|                                              select the autocommand group to use
|:autocmd|                                           enter or show autocommands
|:noautocmd|                       following command don't trigger autocommands
'filetype'                                  type of file, used for autocommands
|:doautoall|                                                 apply autocommands for all loaded buffers
|:doautocmd|                                                 apply autocommands to current buffer
'copyindent'                                                 make 'autoindent' use existing indent structure
'smartindent'                                                smart autoindenting for C programs
'autoread'                                                         autom. read file when changed outside of Vim
'formatoptions'                                                how automatic formatting is to be done
'lisp'                                                             automatic indenting for Lisp
'fileencodings'                                                    automatically detected character encodings
'fileformats'                                                      automatically detected values for 'fileformat'
'equalalways'                                          windows are automatically made the same size
'autowrite'                                                        automatically write file if changed
'autowriteall'                                                 as 'autowrite', but works with more commands
'window'                 nr of lines to scroll for CTRL-F and CTRL-B
|:continue|                                                     go back to :while
'backspace'                                                    how backspace works at start of line
'backupcopy'                                                  make backup as a copy, don't rename the file
'writebackup'                                               make a backup before overwriting a file
'backupext'                                 extension used for the backup file
'backupdir'                            list of directories for the backup file
'backup'                                                      keep backup file after overwriting a file
'backupskip'                                                    no backup for files that match these patterns
'revins'                            inserting characters will work backwards
|:spellundo|                                        remove good or bad word
|:spellrepall|                                         replace all bad words like last |z=|
'balloonexpr'                                expression to show in balloon
'ballooneval'                                            switch on balloon evaluation
'balloondelay'                                delay in mS before a balloon may pop up
'modified'                                              buffer has been modified
|:bmodified|         go to next buffer in the buffer list that has been modified
'visualbell'                            use visual bell instead of beeping
'balloondelay'                                         delay in mS before a balloon may pop up
'ttybuiltin'                                  use built-in termcap before external termcap
'writebackup'                                        make a backup before overwriting a file
'mkspellmem'                                           memory used before |:mkspell| compresses the tree
'scrollopt'                                how 'scrollbind' should behave
'compatible'                                                       behave Vi-compatible as much as possible
'tildeop'                                        tilde command "~" behaves like an operator
'cpoptions'                                flags for Vi-compatible behavior
|:behave|                                  set mouse and selection behavior
'switchbuf'                                                   sets behavior when switching to another buffer
'textwidth'                          maximum width of text that is being inserted
'errorbells'                                              ring the bell for error messages
'visualbell'                                            use visual bell instead of beeping
|:belowright|                    make split window appear right or below
|:rightbelow|                    make split window appear right or below
'scrolloff'                         minimum nr. of lines above and below cursor
'splitbelow'                              new window from split is below the current one
'linespace'                           number of pixel lines to use between characters
'mousetime'                                               max time between mouse double-click
'mzquantum'                                           the interval between polls for MzScheme threads
'termbidi'                                  terminal takes care of bi-directionality
'binary'                                   read/write/edit file in binary mode
'tagbsearch'                                                   use binary searching in tags files
|:syncbind|                                            sync scroll binding
'bioskey'                                              MS-DOS: use bios calls for input characters
'linebreak'                                   wrap long lines at a blank
'startofline'                    commands move cursor to first non-blank in line
'guicursor'                     GUI: settings for cursor shape and blinking
|:undojoin|                    join next change with previous undo block
|:botright|                            make split window appear at bottom or far right
'whichwrap'                     allow specified keys to cross line boundaries
'showmatch'                               briefly jump to matching bracket if insert one
'breakat'                         characters that may cause a line break
|:break|                                                           break out of while loop
|:breakadd|                                         add a debugger breakpoint
|:breakdel|                                      delete a debugger breakpoint
|:breaklist|                                         list debugger breakpoints
'showmatch'                                                        briefly jump to matching bracket if insert one
'browsedir'                               which directory to start browsing in
|:caddbuffer|                                      add errors from buffer
|:laddbuffer|                                   add locations from buffer
|:doautocmd|                         apply autocommands to current buffer
'readonly'                                    disallow writing the buffer
|:enew|                                        edit a new, unnamed buffer
|:bufdo|                            execute command in each listed buffer
|:cgetbuffer|                                      get errors from buffer
|:lgetbuffer|                                   get locations from buffer
|:goto|                                          go to byte in the buffer
'maxmem'                    maximum memory (in Kbyte) used for one buffer
|:bwipeout|                                        really delete a buffer
|:diffget|                           remove differences in current buffer
|:diffput|                             remove differences in other buffer
'switchbuf'                sets behavior when switching to another buffer
'buftype'                                          special type of buffer
'syntax'                           syntax to be loaded for current buffer
|:bunload|                                       unload a specific buffer
'swapfile'                         whether to use a swapfile for a buffer
|:xit|                                                    write if buffer changed and quit window or Vim
|:hide|                                               hide current buffer for a command
|:bdelete|                                                remove a buffer from the buffer list
'modified'                                                         buffer has been modified
|:update|                                                    write buffer if modified
|:bfirst|                                              go to first buffer in the buffer list
|:brewind|                                             go to first buffer in the buffer list
|:blast|                                                go to last buffer in the buffer list
|:bnext|                                                go to next buffer in the buffer list
|:bNext|                                            go to previous buffer in the buffer list
|:bprevious|                                        go to previous buffer in the buffer list
|:buffer|                                           go to specific buffer in the buffer list
|:ball|                                     open a window for each buffer in the buffer list
|:bmodified|                                            go to next buffer in the buffer list that has been modified
'bufhidden'                                        what to do when buffer is no longer in window
|:badd|                                          add buffer to the buffer list
|:bfirst|                                go to first buffer in the buffer list
|:brewind|                               go to first buffer in the buffer list
|:blast|                                  go to last buffer in the buffer list
|:bnext|                                  go to next buffer in the buffer list
|:bNext|                              go to previous buffer in the buffer list
|:bprevious|                          go to previous buffer in the buffer list
|:buffer|                             go to specific buffer in the buffer list
|:buffers|                                   list all files in the buffer list
|:files|                                     list all files in the buffer list
|:ball|                       open a window for each buffer in the buffer list
|:sball|                        open a window for each file in the buffer list
|:unhide|                open a window for each loaded file in the buffer list
|:bdelete|                                remove a buffer from the buffer list
|:sbfirst|                split window and go to first file in the buffer list
|:sbrewind|               split window and go to first file in the buffer list
|:sblast|                      split window and go to last file in buffer list
|:sbmodified|          split window and go to modified file in the buffer list
|:sbnext|                  split window and go to next file in the buffer list
|:sbNext|              split window and go to previous file in the buffer list
|:sbprevious|          split window and go to previous file in the buffer list
|:sbuffer|             split window and go to specific file in the buffer list
'buflisted'                     whether the buffer shows up in the buffer list
|:bmodified|                              go to next buffer in the buffer list that has been modified
'undoreload'                 max nr of lines to save for undo on a buffer reload
'buflisted'                                            whether the buffer shows up in the buffer list
|:badd|                                                        add buffer to the buffer list
'warn'                                 warn for shell command when buffer was changed
'hidden'                                              don't unload buffer when it is |abandon|ed
|:doautoall|                     apply autocommands for all loaded buffers
|:checktime|                             check timestamp of loaded buffers
|:ls|                                                     list all buffers
'maxmemtot'                 maximum memory (in Kbyte) used for all buffers
|:diffupdate|                                        update 'diff' buffers
|:wall|                                        write all (changed) buffers
|:wqall|                                         write all changed buffers and quit Vim
'ttybuiltin'                                                   use built-in termcap before external termcap
'mousemodel'                              changes meaning of mouse buttons
|:emenu|                                            execute a menu by name
|:popup|                                              popup a menu by name
'tags'                                     list of file names used by the tag command
'termencoding'                             character encoding used by the terminal
'guifontset'                                   GUI: Names of multi-byte fonts to be used
|:goto|                                                      go to byte in the buffer
'bomb'                                                   prepend a Byte Order Mark to the file
'fileencoding'                             file encoding for multi-byte text
'cindent'                                                       do C program indenting
'smartindent'                              smart autoindenting for C programs
|:call|                                                            call a function
'operatorfunc'                                      function to be called for |g@| operator
'bioskey'                                         MS-DOS: use bios calls for input characters
'undolevels'                        maximum number of changes that can be undone
'matchpairs'                          pairs of characters that "%" can match
'comments'                                           patterns that can start a comment line
'termbidi'                                          terminal takes care of bi-directionality
'ignorecase'                                                ignore case in search patterns
'casemap'                                            specifies how case of letters is changed
'infercase'                                                 adjust case of match for keyword completion
'smartcase'                                              no ignore case when pattern has uppercase
'breakat'                                      characters that may cause a line break
'pastetoggle'                                        key code that causes 'paste' to toggle
'cdpath'                       list of directories searched with ":cd"
|:center|                                      format lines at the center
|:redo|                                            redo one undone change
|:resize|                                                          change current window height
|:cd|                                                              change directory
|:chdir|                                                           change directory
|:lcd|                                                             change directory locally
|:lchdir|                                                          change directory locally
'autochdir'                                                        change directory to the file in the current window
'lispwords'                                             words that change how lisp indenting works
|:changes|                                               print the change list
|:retab|                                                           change tab size
|:mode|                                                    show or change the screen mode
|:undojoin|                                              join next change with previous undo block
|:undo|                                                  undo last change(s)
|:later|                                               go to newer change, redo
|:earlier|                                             go to older change, undo
'autowrite'                            automatically write file if changed
'casemap'                         specifies how case of letters is changed
'report'                      threshold for reporting nr. of lines changed
'warn'                      warn for shell command when buffer was changed
|:xit|                                             write if buffer changed and quit window or Vim
|:wqall|                                                 write all changed buffers and quit Vim
'autoread'                                   autom. read file when changed outside of Vim
|:wall|                                                 write all (changed) buffers
'mousemodel'                                                       changes meaning of mouse buttons
'magic'                                                            changes special characters in search patterns
'undolevels'                                     maximum number of changes that can be undone
'modifiable'                                                       changes to the text are not possible
'writedelay'                         delay this many msec for each char (for debug)
'charconvert'                                       expression for character encoding conversion
'termencoding'                                                     character encoding used by the terminal
'fileencodings'                             automatically detected character encodings
'wildchar'                                            command-line character for wildcard expansion
'printmbcharset'                                               CJK character set to be used for :hardcopy
|:ascii|                                      print ascii value of character under the cursor
'shellquote'                                                 quote character(s) for around shell command
'arabicshape'                                do shaping for Arabic characters
'guifontwide'                   list of font names for double-wide characters
'bioskey'                         MS-DOS: use bios calls for input characters
'linespace'                   number of pixel lines to use between characters
'isprint'                                                printable characters
'maxcombine'                               maximum nr of combining characters displayed
'updatecount'                                      after this many characters flush swap file
'taglength'                                  number of significant characters for a tag
'listchars'                                                        characters for displaying in list mode
'langmap'                                               alphabetic characters for other language mode
'magic'                                            changes special characters in search patterns
'isfname'                                                          characters included in file names and pathnames
'isident'                                                          characters included in identifiers
'iskeyword'                                                        characters included in keywords
'delcombine'                                      delete combining characters on their own
'matchpairs'                                              pairs of characters that "%" can match
'breakat'                                                          characters that may cause a line break
'fillchars'                                                        characters to use for displaying special items
'quoteescape'                                               escape characters used in a string
'revins'                                                 inserting characters will work backwards
'shortname'                non-MS-DOS: Filenames assumed to be 8.3 chars
'wrapmargin'                                                       chars from the right where wrapping starts
'ambiwidth'                                what to do with Unicode chars of ambiguous width
|:checktime|                                                       check timestamp of loaded buffers
'modelines'                                        number of lines checked for modelines
'spell'                                               enable spell checking
'spelllang'                                language(s) to do spell checking for
'cinwords'                                   words where 'si' and 'cin' add an indent
'cinoptions'                             how to do indenting when 'cindent' is set
'cinkeys'                           keys that trigger indent when 'cindent' is set
'printmbcharset'                                                   CJK character set to be used for :hardcopy
'printmbfont'                            font names to be used for CJK output of :hardcopy
|:cabclear|                                                        clear all abbreviations for Command-line mode
|:cmapclear|                                                       clear all mappings for Command-line mode
|:mapclear|                                                        clear all mappings for Normal and Visual mode
|:nmapclear|                                                       clear all mappings for Normal mode
|:comclear|                                                        clear all user-defined commands
'mousetime'                          max time between mouse double-click
'mouse'                                    enable the use of mouse clicks
'clipboard'                                                use the clipboard as the unnamed register
'foldclose'                                                        close a fold when the cursor leaves it
|:tabonly|                                                         close all tab pages except the current one
|:only|                                                            close all windows except the current one
|:tabclose|                                                        close current tab page
|:close|                                                           close current window
|:foldclose|                                                       close folds
'foldlevel'                                                        close folds with a level higher than this
|:lclose|                                                          close location window
|:lwindow|                                                 open or close location window
|:pclose|                                                          close preview window
|:cclose|                                                          close quickfix window
|:cwindow|                                                 open or close quickfix window
|:nbclose|                                                         close the current Netbeans session
'foldminlines'            minimum number of lines for a fold to be closed
|:folddoclosed|                      execute command on lines in a closed fold
|:folddoopen|                    execute command on lines not in a closed fold
'foldtext'                        expression used to display for a closed fold
'winfixheight'                     keep window height when opening/closing windows
'winfixwidth'                       keep window width when opening/closing windows
|:cquit|                                    quit Vim with an error code
|:fixdel|                                                  set key code of <Del>
'aleph'                                                      ASCII code of the letter Aleph (Hebrew)
'pastetoggle'                                                  key code that causes 'paste' to toggle
'timeout'                             time out on mappings and key codes
'ttymouse'                                           type of mouse codes generated
'ttimeoutlen'                                time out time for key codes in milliseconds
|:colorscheme|                                     load a specific color scheme
'background'                 "dark" or "light", used for highlight colors
'ruler'                                       show cursor line and column in the status line
'cursorcolumn'                                highlight the screen column of the cursor
'synmaxcol'                                                maximum column to find syntax items
'foldcolumn'                                          width of the column used to indicate folds
'winminwidth'                                    minimal number of columns for any window
'winwidth'                                       minimal number of columns for current window
'columns'                                                number of columns in the display
'colorcolumn'                                                      columns to highlight
'sidescrolloff'                                        min. nr. of columns to left and right of cursor
'sidescroll'                                     minimum number of columns to scroll horizontal
'numberwidth'                                            number of columns used for the line number
'titlelen'                                          percentage of 'columns' used for window title
'maxcombine'                                         maximum nr of combining characters displayed
'delcombine'                                                delete combining characters on their own
|:command|                                     create user-defined command
|:delcommand|                                  delete user-defined command
|:wincmd|                                execute a Window (CTRL-W) command
|:cscope|                                           execute cscope command
|:mzscheme|                                       execute MzScheme command
|:perl|                                               execute Perl command
|:py3|                                            execute Python 3 command
|:python|                                           execute Python command
|:ruby|                                               execute Ruby command
|:tcl|                                                 execute Tcl command
|:lua|                                               execute |Lua| command
'formatexpr'                             expression used with "gq" command
'equalprg'                         external program to use for "=" command
|:!|                           filter lines or execute an external command
'shellcmdflag'                        flag to shell to execute one command
|:hide|                                  hide current buffer for a command
'tags'                          list of file names used by the tag command
'formatprg'                name of external program used with "gq" command
'nrformats'                   number formats recognized for CTRL-A command
|:catch|                                            part of a :try command
|:finally|                                          part of a :try command
|:else|                                             part of an :if command
|:elseif|                                           part of an :if command
'makeprg'                           program to use for the ":make" command
'keywordprg'                            program to use for the "K" command
'shellquote'                   quote character(s) for around shell command
|:!!|                                             repeat last ":!" command
|:scscope|                         split window and execute cscope command
'edcompatible'                       toggle flags of ":substitute" command
'joinspaces'                 two spaces after a period with a join command
'tildeop'                                                    tilde command "~" behaves like an operator
|:lmake|                                          execute external command 'makeprg' and parse error messages
|:make|                                           execute external command 'makeprg' and parse error messages
|:noautocmd|                                             following command don't trigger autocommands
|:luado|                                               execute Lua command for each line
|:perldo|                                             execute Perl command for each line
|:rubydo|                                             execute Ruby command for each line
|:tcldo|                                               execute Tcl command for each line
|:debug|                                                     run a command in debugging mode
|:bufdo|                                                   execute command in each listed buffer
|:tabdo|                                                   execute command in each tab page
|:windo|                                                   execute command in each window
'showcmd'                                           show (partial) command in status line
|:sandbox|                                               execute a command in the sandbox
|:keepjumps|                                             following command keeps jumplist and marks
|:keepmarks|                                             following command keeps marks where they are
|:lockmarks|                                             following command keeps marks where they are
|:keepalt|                                               following command keeps the alternate file
'imcmdline'                         use IM when starting to edit a command line
'wildmenu'                                            use menu for command line completion
'wildoptions'                                        specifies how command line completion is done
|:unsilent|                                                  run a command not silently
|:argdo|                                                      do a command on all items in the argument list
|:folddoclosed|                                            execute command on lines in a closed fold
|:folddoopen|                                              execute command on lines not in a closed fold
|:silent|                                                    run a command silently
|:vertical|                                         make following command split vertically
'cscopeprg'                                                        command to execute cscope
'warn'                                              warn for shell command when buffer was changed
|:verbose|                                                 execute command with 'verbose' set
'cmdheight'                         number of lines to use for the command-line
'wildchar'                                                         command-line character for wildcard expansion
'wildmode'                                     mode for 'wildchar' command-line expansion
|:cmenu|                                              add menu for Command-line mode
'allowrevins'                           allow CTRL-_ in Insert and Command-line mode
|:cabclear|                            clear all abbreviations for Command-line mode
|:cmapclear|                                clear all mappings for Command-line mode
|:cabbrev|                              like ":abbreviate" but for Command-line mode
|:cmap|                                        like ":map" but for Command-line mode
|:cnoreabbrev|                          like ":noreabbrev" but for Command-line mode
|:cnoremap|                                like ":noremap" but for Command-line mode
|:cnoremenu|                              like ":noremenu" but for Command-line mode
|:cunabbrev|                              like ":unabbrev" but for Command-line mode
|:cunmap|                                    like ":unmap" but for Command-line mode
|:cunmenu|                                         remove menu for Command-line mode
'cmdwinheight'                                       height of the command-line window
'cedit'                                       key used to open the command-line window
'history'                                                number of command-lines that are remembered
'autowriteall'                 as 'autowrite', but works with more commands
|:comclear|                                 clear all user-defined commands
|:normal|                                      execute Normal mode commands
'guipty'                     GUI: try to use a pseudo-tty for ":!" commands
'shell'                          name of shell to use for external commands
|:exusage|                                          overview of Ex commands
|:viusage|                                 overview of Normal mode commands
|:echohl|                                set highlighting for echo commands
'cscopetag'                                     use cscope for tag commands
'shelltemp'                   whether to use a temp file for shell commands
'foldopen'                                               for which commands a fold will be opened
|:global|                                                  execute commands for matching lines
|:vglobal|                                                 execute commands for not matching lines
'rightleftcmd'                                                     commands for which editing works right-to-left
|:source|                                           read Vim or Ex commands from a file
|:debuggreedy|                                     read debug mode commands from normal input
'startofline'                                                      commands move cursor to first non-blank in line
|:if|                                                      execute commands when condition met
|:try|                                                     execute commands, abort on error or exception
'comments'                               patterns that can start a comment line
'commentstring'                                       template for comments; used for fold marker
'compatible'                                             behave Vi-compatible as much as possible
'cpoptions'                                           flags for Vi-compatible behavior
|:compiler|                             do settings for a specific compiler
'wildignore'                 files matching these patterns are not completed
'showfulltag'                           show full tag pattern when completing tag
'infercase'                       adjust case of match for keyword completion
'omnifunc'                          function for filetype-specific completion
'completefunc'                 function to be used for Insert mode completion
'dictionary'                   list of file names used for keyword completion
'thesaurus'                    list of thesaurus files for keyword completion
'completeopt'                              options for Insert mode completion
'wildmenu'                               use menu for command line completion
'wildoptions'                           specifies how command line completion is done
'complete'                                 specify how Insert mode completion works
'guioptions'                                            GUI: Which components and options are used
'cscopepathcomp'                                          how many components of the path to show
'mkspellmem'                         memory used before |:mkspell| compresses the tree
'concealcursor'                                            whether concealable text is hidden in cursor line
'conceallevel'                                             whether concealable text is shown or hidden
|:if|                                        execute commands when condition met
|:while|                               execute loop for as long as condition met
|:confirm|                                        prompt user when confirmation required
'ttyfast'                                indicates a fast terminal connection
'conskey'                                   get keys directly from console (MS-DOS only)
'tabline'                                    custom format for the console tab pages line
|:tabs|                           list the tab pages and what they contain
|:star|                                                    execute contents of a register
|:@|                                                       execute contents of a register
|:put|                                                      insert contents of register in the text
|:registers|                                           display the contents of registers
|:tags|                                                   show the contents of the tag stack
'wrap'                                         long lines wrap and continue on the next line
'printoptions'                                                     controls the format of :hardcopy output
'charconvert'                    expression for character encoding conversion
|:copy|                                                            copy lines
|:t|                                                     same as ":copy"
'backupcopy'                                      make backup as a copy, don't rename the file
|:spelldump|                        split window and fill with all correct words
'spellsuggest'                  method(s) used to suggest spelling corrections
|:fold|                                                            create a fold
|:new|                                                             create a new empty window
|:vnew|                                                            create a new empty window, vertically split
|:tab|                                                             create new tab when opening new window
|:command|                                                         create user-defined command
'whichwrap'                                allow specified keys to cross line boundaries
'cscopeprg'                                     command to execute cscope
|:cscope|                                                  execute cscope command
|:scscope|                                split window and execute cscope command
'cscopeverbose'                        give messages when adding a cscope database
'cscopetag'                                                    use cscope for tag commands
'cscopequickfix'                           use quickfix window for cscope results
|:cstag|                                                       use cscope to jump to a tag
|:lcscope|                                                  like ":cscope" but uses location list
'cscopetagorder'                                      determines ":cstag" search order
'allowrevins'                                                allow CTRL-_ in Insert and Command-line mode
'nrformats'                          number formats recognized for CTRL-A command
'window'                      nr of lines to scroll for CTRL-F and CTRL-B
'scroll'                           lines to scroll with CTRL-U and CTRL-D
'window'                                 nr of lines to scroll for CTRL-F and CTRL-B
'scroll'                                      lines to scroll with CTRL-U and CTRL-D
|:wincmd|                                        execute a Window (CTRL-W) command
|:doautocmd|                                 apply autocommands to current buffer
|:diffget|                                   remove differences in current buffer
'syntax'                                   syntax to be loaded for current buffer
|:hide|                                                       hide current buffer for a command
'secure'                         secure mode for reading .vimrc in current dir
|:pwd|                                                       print current directory
'exrc'                                read .vimrc and .exrc in the current directory
|:file|                                            show or set the current file name
|:grepadd|                               like :grep, but append to current list
|:lgrepadd|                              like :grep, but append to current list
|:lvimgrepadd|                        like :vimgrep, but append to current list
|:vimgrepadd|                         like :vimgrep, but append to current list
|:laddfile|                                       add locations to current location list
|:mkexrc|                                                    write current mappings and settings to a file
|:mkvimrc|                                                   write current mappings and settings to a file
'showmode'                          message on status line to show current mode
|:nbclose|                                               close the current Netbeans session
|:tabonly|                          close all tab pages except the current one
|:only|                               close all windows except the current one
'splitbelow'                    new window from split is below the current one
'splitright'                        new window is put right of the current one
|:caddfile|                                   add error message to current quickfix list
|:swapname|                                   show the name of the current swap file
|:tabclose|                                                  close current tab page
'autochdir'                    change directory to the file in the current window
|:close|                                                     close current window
|:drop|                jump to window editing file or edit file in current window
'winwidth'                           minimal number of columns for current window
'winheight'                        minimum number of lines for the current window
|:split|                                                     split current window
'diff'                                       use diff mode for the current window
|:quit|                                                       quit current window (when one window quit Vim)
|:diffthis|                                                   make current window a diff window
|:sfind|                                                     split current window and edit file in 'path'
|:loadview|                                          load view for current window from a file
|:resize|                                                   change current window height
|:mkview|                                            write view of current window to a file
|:vsplit|                                                    split current window vertically
'cursorcolumn'                  highlight the screen column of the cursor
'cursorline'                      highlight the screen line of the cursor
'sidescrolloff'           min. nr. of columns to left and right of cursor
'scrolloff'                   minimum nr. of lines above and below cursor
|:ascii|                  print ascii value of character under the cursor
'cursorbind'                                                  move cursor in window as it moves in other windows
'foldclose'                                  close a fold when the cursor leaves it
'concealcursor'              whether concealable text is hidden in cursor line
'ruler'                                                       show cursor line and column in the status line
|:=|                                                     print the cursor line number
'guicursor'                                      GUI: settings for cursor shape and blinking
'startofline'                                        commands move cursor to first non-blank in line
'tabline'                                                          custom format for the console tab pages line
'rulerformat'                                                      custom format for the ruler
'statusline'                                                       custom format for the status line
'guitablabel'                                                 GUI: custom label for a tab page
'guitabtooltip'                                               GUI: custom tooltip for a tab page
'scroll'                      lines to scroll with CTRL-U and CTRL-D
'background'                                                      "dark" or "light", used for highlight colors
'cscopeverbose'                 give messages when adding a cscope database
|:debuggreedy|                                                read debug mode commands from normal input
'writedelay'               delay this many msec for each char (for debug)
|:breakadd|                                                  add a debugger breakpoint
|:breakdel|                                               delete a debugger breakpoint
|:breaklist|                                                  list debugger breakpoints
|:debug|                                          run a command in debugging mode
'guiheadroom'                          GUI: pixels room for window decorations
|:cfirst|                               go to the specified error, default first one
|:crewind|                              go to the specified error, default first one
|:lfirst|                            go to the specified location, default first one
|:lrewind|                           go to the specified location, default first one
|:clast|                                go to the specified error, default last one
|:llast|                             go to the specified location, default last one
'gdefault'                           the ":substitute" flag 'g' is default on
'arabic'                                           for Arabic as a default second language
'altkeymap'                                                    for default second language (Farsi/Hebrew)
|:djump|                                                  jump to #define
|:dsearch|                                               list one #define
|:dsplit|                                split window and jump to #define
|:arglocal|                                                        define a local argument list
|:match|                                                           define a match to highlight
|:function|                                                        define a user function
|:tmenu|                                                           define menu tooltip
|:argglobal|                                                       define the global argument list
|:command|                                             create user-defined command
|:delcommand|                                          delete user-defined command
|:comclear|                                         clear all user-defined commands
|:dlist|                                                     list #defines
'define'                        pattern to be used to find a macro definition
|:ijump|                                                   jump to definition of identifier
|:isplit|                                 split window and jump to definition of identifier
|:fixdel|                                         set key code of <Del>
'balloondelay'                                                     delay in mS before a balloon may pop up
'writedelay'                                                       delay this many msec for each char (for debug)
|:bwipeout|                                                 really delete a buffer
|:breakdel|                                                        delete a debugger breakpoint
|:delfunction|                                                     delete a user function
'delcombine'                                                       delete combining characters on their own
|:argdelete|                                                       delete items from the argument list
|:delete|                                                          delete lines
|:delmarks|                                                        delete marks
|:delcommand|                                                      delete user-defined command
|:unlet|                                                           delete variable
'foldnestmax'                                         maximum fold depth
'maxmapdepth'                                    maximum recursive depth for mapping
'maxfuncdepth'                                   maximum recursive depth for user functions
'errorformat'                                                      description of the lines in the error file
'fileencodings'                                      automatically detected character encodings
'fileformats'                                        automatically detected values for 'fileformat'
|:filetype|                                       switch file type detection on/off
'cscopetagorder'                                                   determines ":cstag" search order
'opendevice'                                 allow reading/writing devices on MS-Windows
|:browse|                                       use file selection dialog
|:promptrepl|                                             open GUI dialog for search/replace
|:promptfind|                                             open GUI dialog for searching
|:helpfind|                                                        dialog to open a help window
'diffexpr'                             expression used to obtain a diff file
'diffopt'                                        options for using diff mode
|:diffoff|                                              switch off diff mode
'diff'                                                         use diff mode for the current window
|:diffthis|                                  make current window a diff window
|:diffupdate|                                              update 'diff' buffers
|:diffpatch|                                apply a patch and show differences
|:diffget|                                                  remove differences in current buffer
|:diffput|                                                  remove differences in other buffer
|:diffsplit|                                                  show differences with another file
'mouseshape'                         shape of the mouse pointer in different modes
|:digraphs|                                          show or enter digraphs
'digraph'                                   enable the entering of digraphs in Insert mode
'secure'                 secure mode for reading .vimrc in current dir
'eadirection'                                             in which direction 'equalalways' works
'termbidi'                               terminal takes care of bi-directionality
'conskey'                                                 get keys directly from console (MS-DOS only)
|:tjump|                                 like ":tselect", but jump directly when there is only one match
'backupdir'                                                list of directories for the backup file
'cdpath'                                                   list of directories searched with ":cd"
'path'                                                     list of directories searched with "gf" et.al.
'runtimepath'                                              list of directories used for runtime files
|:cd|                                                       change directory
|:chdir|                                                    change directory
|:helptags|                               generate help tags for a directory
|:pwd|                                               print current directory
'exrc'                        read .vimrc and .exrc in the current directory
|:lcd|                                                      change directory locally
|:lchdir|                                                   change directory locally
'directory'                                                list of directory names for the swap file
'browsedir'                                                  which directory to start browsing in
'autochdir'                                                 change directory to the file in the current window
'viewdir'                                                          directory where to store files with :mkview
'readonly'                                                         disallow writing the buffer
|:redraw|                                    force a redraw of the display
'columns'                                 number of columns in the display
'lines'                                     number of lines in the display
'foldenable'                                                set to display all folds open
'foldtext'                                      expression used to display for a closed fold
|:display|                                                         display registers
'display'                                 list of flags for how to display text
|:registers|                                                       display the contents of registers
'maxcombine'                    maximum nr of combining characters displayed
'showtabline'                     tells when the tab pages line is displayed
|:messages|                                        view previously displayed messages
'listchars'                                         characters for displaying in list mode
'fillchars'                                  characters to use for displaying special items
'lazyredraw'                                                       don't redraw while executing macros
'backupcopy'                                make backup as a copy, don't rename the file
|:noautocmd|                                     following command don't trigger autocommands
'hidden'                                                           don't unload buffer when it is |abandon|ed
'formatoptions'                  how automatic formatting is to be done
'wildoptions'             specifies how command line completion is done
'conskey'                       get keys directly from console (MS-DOS only)
'shortname'                                                 non-MS-DOS: Filenames assumed to be 8.3 chars
'bioskey'                                                       MS-DOS: use bios calls for input characters
'mousetime'                                 max time between mouse double-click
'guifontwide'                               list of font names for double-wide characters
'macatsui'                                 Mac GUI: use ATSUI text drawing
|:ball|                                          open a window for each buffer in the buffer list
'writedelay'                              delay this many msec for each char (for debug)
|:sall|                                          open a window for each file in argument list
|:all|                                           open a window for each file in the argument list
|:sball|                                         open a window for each file in the buffer list
|:luado|                                   execute Lua command for each line
|:perldo|                                 execute Perl command for each line
|:rubydo|                                 execute Ruby command for each line
|:tcldo|                                   execute Tcl command for each line
'number'                         print the line number in front of each line
'relativenumber'             show relative line number in front of each line
|:bufdo|                                        execute command in each listed buffer
|:unhide|                                        open a window for each loaded file in the buffer list
|:tabdo|                                        execute command in each tab page
|:windo|                                        execute command in each window
|:echohl|                                     set highlighting for echo commands
|:echon|                                                  same as :echo, but without <EOL>
|:echomsg|                                                same as :echo, put message in history
|:echoerr|                                                   like :echo, show like an error and use history
|:echo|                                                            echoes the result of expressions
'hidden'                   don't unload buffer when it is |abandon|ed
'imcmdline'                                use IM when starting to edit a command line
'foldlevelstart'                      'foldlevel' when starting to edit a file
|:edit|                                                            edit a file
|:tabedit|                                                         edit a file in a new tab page
|:tabnew|                                                          edit a file in a new tab page
|:view|                                                            edit a file read-only
|:enew|                                                            edit a new, unnamed buffer
|:sfind|                                  split current window and edit file in 'path'
'binary'                                                read/write/edit file in binary mode
|:drop|                             jump to window editing file or edit file in current window
|:pedit|                                                           edit file in the preview window
|:sview|                                          split window and edit file read-only
|:argedit|                       add item to the argument list and edit it
|:find|                                    find file in 'path' and edit it
|:tabfind|                                    find file in 'path', edit it in a new tab page
'insertmode'                                             start the edit of a file in Insert mode
|:ex|                                                    same as ":edit"
|:visual|                                                same as ":edit", but turns off "Ex" mode
'softtabstop'               number of spaces that <Tab> uses while editing
'virtualedit'                                  when to use virtual editing
|:drop|                                             jump to window editing file or edit file in current window
'rightleftcmd'                                  commands for which editing works right-to-left
|:stop|                                                suspend the editor or escape to a shell
|:new|                                                create a new empty window
|:vnew|                                               create a new empty window, vertically split
'spell'                                                            enable spell checking
'keymodel'                                                         enable starting/stopping selection with keys
'digraph'                                                          enable the entering of digraphs in Insert mode
'mouse'                                                            enable the use of mouse clicks
'charconvert'                             expression for character encoding conversion
'fileencoding'                                                file encoding for multi-byte text
'printencoding'                                                    encoding to be used for printing
'termencoding'                                           character encoding used by the terminal
|:scriptencoding|                                                  encoding used in sourced Vim script
'encoding'                                                         encoding used internally
'fileencodings'                   automatically detected character encodings
|:X|                                                       ask for encryption key
'key'                                                              encryption key
'cryptmethod'                                              type of encryption to use for file writing
'spellcapcheck'                                  pattern to locate end of a sentence
|:endfunction|                                                     end of a user function
'modeline'                         recognize modelines at start or end of file
'wrapscan'                                searches wrap around the end of the file
|:endfor|                                                          end previous :for
|:endif|                                                           end previous :if
|:endtry|                                                          end previous :try
|:endwhile|                                                        end previous :while
|:map|                                                     show or enter a mapping
|:noremap|                                                         enter a mapping that will not be remapped
|:noremenu|                                                        enter a menu that will not be remapped
|:anoremenu|                                                       enter a new menu for all modes that will not be remapped
|:menu|                                                            enter a new menu item
|:abbreviate|                                                      enter abbreviation
|:noreabbrev|                                                      enter an abbreviation that will not be remapped
|:digraphs|                                                show or enter digraphs
|:amenu|                                                           enter new menu item for all modes
|:autocmd|                                                         enter or show autocommands
'digraph'                                               enable the entering of digraphs in Insert mode
|:lNext|                                            go to previous entry in location list
|:lNfile|                                               go to last entry in previous file
|:pop|                                               jump to older entry in tag stack
|:loadkeymap|                     load the following keymaps until EOF
|:echon|                               same as :echo, but without <EOL>
'list'                                             show <Tab> and <EOL>
'endofline'                                                 write <EOL> for last line in file
'eadirection'                                  in which direction 'equalalways' works
|:cnext|                                                go to next error
|:cNext|                                            go to previous error
|:cprevious|                                        go to previous error
|:cc|                                               go to specific error
|:cbuffer|                  parse error messages and jump to first error
|:echoerr|                                like :echo, show like an error and use history
|:cquit|                                          quit Vim with an error code
'errorformat'                      description of the lines in the error file
'shellpipe'                     string to put output of ":make" in error file
|:cnfile|                                              go to first error in next file
|:cNfile|                                               go to last error in previous file
|:cpfile|                                               go to last error in previous file
|:cnewer|                                              go to newer error list
|:colder|                                              go to older error list
|:caddfile|                                                    add error message to current quickfix list
|:lmake|              execute external command 'makeprg' and parse error messages
|:make|               execute external command 'makeprg' and parse error messages
|:cgetfile|                                         read file with error messages
'errorbells'                                     ring the bell for error messages
'debug'                                    set to "msg" to see all error messages
|:cfile|                                            read file with error messages and jump to first
|:cbuffer|                                                   parse error messages and jump to first error
|:try|                                  execute commands, abort on error or exception
|:cfirst|                                      go to the specified error, default first one
|:crewind|                                     go to the specified error, default first one
|:clast|                                       go to the specified error, default last one
'makeef'                                               name of the errorfile for ":make"
'errorfile'                                            name of the errorfile for the QuickFix mode
|:clist|                                                  list all errors
|:caddbuffer|                                                  add errors from buffer
|:cgetbuffer|                                                  get errors from buffer
|:caddexpr|                                                    add errors from expr
|:cgetexpr|                                                    get errors from expr
|:cexpr|                                                      read errors from expr and jump to first
'quoteescape'                                                      escape characters used in a string
|:shell|                                                           escape to a shell
|:stop|                                      suspend the editor or escape to a shell
'path'                      list of directories searched with "gf" et.al.
'ballooneval'                                    switch on balloon evaluation
'eventignore'                                          autocommand events that are ignored
|:exusage|                                             overview of Ex commands
|:source|                                              read Vim or Ex commands from a file
|:visual|                          same as ":edit", but turns off "Ex" mode
|:tabonly|                                     close all tab pages except the current one
|:only|                                          close all windows except the current one
|:try|                         execute commands, abort on error or exception
|:throw|                                                  throw an exception
|:sandbox|                                                         execute a command in the sandbox
|:emenu|                                                           execute a menu by name
|:wincmd|                                                          execute a Window (CTRL-W) command
|:!|                                               filter lines or execute an external command
|:bufdo|                                                           execute command in each listed buffer
|:tabdo|                                                           execute command in each tab page
|:windo|                                                           execute command in each window
|:folddoclosed|                                                    execute command on lines in a closed fold
|:folddoopen|                                                      execute command on lines not in a closed fold
|:verbose|                                                         execute command with 'verbose' set
|:global|                                                          execute commands for matching lines
|:vglobal|                                                         execute commands for not matching lines
|:if|                                                              execute commands when condition met
|:try|                                                             execute commands, abort on error or exception
|:star|                                                            execute contents of a register
|:@|                                                               execute contents of a register
'cscopeprg'                                             command to execute cscope
|:cscope|                                                          execute cscope command
|:scscope|                                        split window and execute cscope command
|:lmake|                                                           execute external command 'makeprg' and parse error messages
|:make|                                                            execute external command 'makeprg' and parse error messages
|:while|                                                           execute loop for as long as condition met
|:luado|                                                           execute Lua command for each line
|:mzscheme|                                                        execute MzScheme command
|:mzfile|                                                          execute MzScheme script file
|:normal|                                                          execute Normal mode commands
'shellcmdflag'                                    flag to shell to execute one command
|:perl|                                                            execute Perl command
|:perldo|                                                          execute Perl command for each line
|:py3|                                                             execute Python 3 command
|:py3file|                                                         execute Python 3 script file
|:python|                                                          execute Python command
|:pyfile|                                                          execute Python script file
|:execute|                                                         execute result of expressions
|:ruby|                                                            execute Ruby command
|:rubydo|                                                          execute Ruby command for each line
|:rubyfile|                                                        execute Ruby script file
|:tcl|                                                             execute Tcl command
|:tcldo|                                                           execute Tcl command for each line
|:tclfile|                                                         execute Tcl script file
|:lua|                                                             execute |Lua| command
|:luafile|                                                         execute |Lua| script file
'lazyredraw'                                    don't redraw while executing macros
'copyindent'                                 make 'autoindent' use existing indent structure
'titleold'                                old title, restored when exiting
'viminfo'                       use .viminfo file upon startup and exiting
'restorescreen'                         Win32: restore screen when exiting
'wildchar'                     command-line character for wildcard expansion
'wildmode'                        mode for 'wildchar' command-line expansion
|:caddexpr|                                        add errors from expr
|:laddexpr|                                     add locations from expr
|:cgetexpr|                                        get errors from expr
|:lgetexpr|                                     get locations from expr
|:cexpr|                                          read errors from expr and jump to first
|:lexpr|                                       read locations from expr and jump to first
'foldexpr'                   expression used when 'foldmethod' is "expr"
'charconvert'                                                      expression for character encoding conversion
'balloonexpr'                                                      expression to show in balloon
'foldtext'                                                         expression used to display for a closed fold
'diffexpr'                                                         expression used to obtain a diff file
'indentexpr'                                                       expression used to obtain the indent of a line
'patchexpr'                                                        expression used to patch a file
'printexpr'                                                        expression used to print PostScript for :hardcopy
'includeexpr'                                                      expression used to process an include line
'foldexpr'                                                         expression used when 'foldmethod' is "expr"
'formatexpr'                                                       expression used with "gq" command
|:echo|                                       echoes the result of expressions
|:execute|                                       execute result of expressions
'exrc'                                            read .vimrc and .exrc in the current directory
'backupext'                                                        extension used for the backup file
|:!|                                    filter lines or execute an external command
|:lmake|                                                   execute external command 'makeprg' and parse error messages
|:make|                                                    execute external command 'makeprg' and parse error messages
'shell'                                   name of shell to use for external commands
'equalprg'                                                         external program to use for "=" command
'formatprg'                                                name of external program used with "gq" command
'ttybuiltin'                           use built-in termcap before external termcap
'window'                            nr of lines to scroll for CTRL-F and CTRL-B
|:topleft|                      make split window appear at top or far left
|:botright|                  make split window appear at bottom or far right
'fkmap'                                                            Farsi keyboard mapping
'altkeymap'                           for default second language (Farsi/Hebrew)
'ttyfast'                                              indicates a fast terminal connection
|:sleep|                                          do nothing for a few seconds
'foldlevelstart'               'foldlevel' when starting to edit a file
'updatecount'                after this many characters flush swap file
'updatetime'               after this many milliseconds flush swap file
'errorformat'                description of the lines in the error file
|:edit|                                                     edit a file
|:mzfile|                                  execute MzScheme script file
|:py3file|                                 execute Python 3 script file
|:pyfile|                                    execute Python script file
|:rubyfile|                                    execute Ruby script file
|:tclfile|                                      execute Tcl script file
|:luafile|                                    execute |Lua| script file
'diffexpr'                        expression used to obtain a diff file
'patchexpr'                             expression used to patch a file
'backupext'                          extension used for the backup file
|:keepalt|                   following command keeps the alternate file
'helpfile'                         full path name of the main help file
|:cnfile|                                go to first error in next file
|:lnfile|                             go to first location in next file
|:lNfile|                             go to last entry in previous file
|:cNfile|                             go to last error in previous file
|:cpfile|                             go to last error in previous file
|:lpfile|                          go to last location in previous file
'swapsync'                                    how to sync the swap file
'backup'                      keep backup file after overwriting a file
'patchmode'                           keep the oldest version of a file
|:oldfiles|              list files that have marks in the viminfo file
'backupdir'                     list of directories for the backup file
'directory'                   list of directory names for the swap file
|:loadview|                    load view for current window from a file
'writebackup'                   make a backup before overwriting a file
'backupcopy'               make backup as a copy, don't rename the file
'include'                    pattern to be used to find an include file
'bomb'                            prepend a Byte Order Mark to the file
|:mkspell|                                      produce .spl spell file
|:rviminfo|                                      read from viminfo file
|:rundo|                              read undo information from a file
|:source|                           read Vim or Ex commands from a file
'modeline'                  recognize modelines at start or end of file
|:recover|                              recover a file from a swap file
'undofile'                              save undo information in a file
'wrapscan'                     searches wrap around the end of the file
|:diffsplit|                         show differences with another file
|:swapname|                      show the name of the current swap file
'shellpipe'               string to put output of ":make" in error file
'shellredir'              string to put output of filter in a temp file
'suffixesadd'                  suffixes added when searching for a file
'endofline'                           write <EOL> for last line in file
|:preserve|                                 write all text to swap file
|:mkexrc|                 write current mappings and settings to a file
|:mkvimrc|                write current mappings and settings to a file
|:mksession|                               write session info to a file
|:write|                                                write to a file
|:wviminfo|                                       write to viminfo file
|:wundo|                               write undo information to a file
|:mkview|                        write view of current window to a file
'backup'                                               keep backup file after overwriting a file
|:wnext|                                                write to a file and go to next file in argument list
|:wNext|                                                write to a file and go to previous file in argument list
|:wprevious|                                            write to a file and go to previous file in argument list
|:wq|                                                   write to a file and quit window or Vim
'tagrelative'                                    file names in tag file are relative
'fileencoding'                                                     file encoding for multi-byte text
'shelltemp'                                  whether to use a temp file for shell commands
'fileformat'                                                       file format used for file I/O
|:recover|                                               recover a file from a swap file
'fileformat'                                  file format used for file I/O
'autowrite'                                    automatically write file if changed
|:sfind|                             split current window and edit file in 'path'
|:find|                                                       find file in 'path' and edit it
|:tabfind|                                                    find file in 'path', edit it in a new tab page
|:tabedit|                                                  edit a file in a new tab page
|:tabnew|                                                   edit a file in a new tab page
|:previous|                                         go to previous file in argument list
|:sall|                                     open a window for each file in argument list
|:sNext|                           split window and go to previous file in argument list
|:sargument|                       split window and go to specific file in argument list
|:wnext|                            write to a file and go to next file in argument list
|:wNext|                        write to a file and go to previous file in argument list
|:wprevious|                    write to a file and go to previous file in argument list
'binary'                                           read/write/edit file in binary mode
|:sblast|                              split window and go to last file in buffer list
|:drop|                        jump to window editing file or edit file in current window
'insertmode'                                   start the edit of a file in Insert mode
|:next|                                                 go to next file in the argument list
|:Next|                                             go to previous file in the argument list
|:argument|                                         go to specific file in the argument list
|:first|                                           go to the first file in the argument list
|:rewind|                                          go to the first file in the argument list
|:last|                                             go to the last file in the argument list
|:all|                                      open a window for each file in the argument list
|:sfirst|                             split window and go to first file in the argument list
|:srewind|                            split window and go to first file in the argument list
|:slast|                               split window and go to last file in the argument list
|:snext|                               split window and go to next file in the argument list
|:sprevious|                       split window and go to previous file in the argument list
|:sball|                                    open a window for each file in the buffer list
|:unhide|                            open a window for each loaded file in the buffer list
|:sbfirst|                            split window and go to first file in the buffer list
|:sbrewind|                           split window and go to first file in the buffer list
|:sbmodified|                      split window and go to modified file in the buffer list
|:sbnext|                              split window and go to next file in the buffer list
|:sbNext|                          split window and go to previous file in the buffer list
|:sbprevious|                      split window and go to previous file in the buffer list
|:sbuffer|                         split window and go to specific file in the buffer list
'autochdir'                                change directory to the file in the current window
|:pedit|                                                      edit file in the preview window
|:read|                                                       read file into the text
'write'                                               writing to a file is allowed
|:file|                                    show or set the current file name
'shellslash'                           use forward slash for shell file names
'isfname'                                   characters included in file names and pathnames
'tagrelative'                                                      file names in tag file are relative
'tags'                                                     list of file names used by the tag command
'dictionary'                                               list of file names used for keyword completion
|:drop|                                     jump to window editing file or edit file in current window
|:redir|                                    redirect messages to a file or register
|:view|                                                     edit a file read-only
|:sview|                                     split window and edit file read-only
|:browse|                                                      use file selection dialog
'verbosefile'                                                      file to write messages in
|:filetype|                                                 switch file type detection on/off
|:saveas|                                                     save file under another name.
'viminfo'                                             use .viminfo file upon startup and exiting
'tabstop'                           number of spaces that <Tab> in file uses
'autoread'                                             autom. read file when changed outside of Vim
|:cgetfile|                                                   read file with error messages
|:cfile|                                                      read file with error messages and jump to first
|:lgetfile|                                                   read file with locations
|:lfile|                                                      read file with locations and jump to first
'writeany'                                                write to file with no need for "!" override
'fsync'                            whether to invoke fsync() after file write
'cryptmethod'                        type of encryption to use for file writing
'filetype'                                                 type of file, used for autocommands
'fileformats'                   automatically detected values for 'fileformat'
'textmode'                                          obsolete, use 'fileformat'
'textauto'                                          obsolete, use 'fileformats'
'shortname'                                            non-MS-DOS: Filenames assumed to be 8.3 chars
'confirm'                   ask what to do about unsaved/read-only files
|:helpgrep|                         like ":grep" but searches help files
|:checkpath|                                         list included files
'runtimepath'                 list of directories used for runtime files
|:lvimgrep|                                  search for pattern in files
|:vimgrep|                                   search for pattern in files
|:spellinfo|                          show info about loaded spell files
'tagbsearch'                          use binary searching in tags files
'undodir'                                      where to store undo files
'thesaurus'                                      list of thesaurus files for keyword completion
|:buffers|                                                list all files in the buffer list
|:files|                                                  list all files in the buffer list
'wildignore'                                                       files matching these patterns are not completed
|:oldfiles|                                                   list files that have marks in the viminfo file
'backupskip'                                         no backup for files that match these patterns
'spellfile'                                                        files where |zg| and |zw| store words
'viewdir'                                 directory where to store files with :mkview
'osfiletype'                             operating system-specific filetype information
|:setfiletype|                                                set 'filetype', unless it was set already
'omnifunc'                                            function for filetype-specific completion
|:spelldump|                                      split window and fill with all correct words
'more'                     pause listings when the whole screen is filled
'shellredir'                               string to put output of filter in a temp file
|:!|                                                               filter lines or execute an external command
'define'                                     pattern to be used to find a macro definition
'include'                                    pattern to be used to find an include file
|:substitute|                                                      find and replace text
|:find|                                                            find file in 'path' and edit it
|:tabfind|                                                         find file in 'path', edit it in a new tab page
'synmaxcol'                                      maximum column to find syntax items
|:cexpr|                         read errors from expr and jump to first
|:cfile|                 read file with error messages and jump to first
|:lfile|                      read file with locations and jump to first
|:lexpr|                      read locations from expr and jump to first
|:bfirst|                                                    go to first buffer in the buffer list
|:brewind|                                                   go to first buffer in the buffer list
|:cbuffer|                        parse error messages and jump to first error
|:cnfile|                                                    go to first error in next file
|:first|                                                 go to the first file in the argument list
|:rewind|                                                go to the first file in the argument list
|:sfirst|                                   split window and go to first file in the argument list
|:srewind|                                  split window and go to first file in the argument list
|:sbfirst|                                  split window and go to first file in the buffer list
|:sbrewind|                                 split window and go to first file in the buffer list
|:lbuffer|                             parse locations and jump to first location
|:lnfile|                                                    go to first location in next file
|:grep|                                  run 'grepprg' and jump to first match
|:lgrep|                                 run 'grepprg' and jump to first match
|:tfirst|                                                  jump to first matching tag
|:trewind|                                                 jump to first matching tag
'startofline'                              commands move cursor to first non-blank in line
|:cfirst|                       go to the specified error, default first one
|:crewind|                      go to the specified error, default first one
|:lfirst|                    go to the specified location, default first one
|:lrewind|                   go to the specified location, default first one
|:tabfirst|                                                 got to first tab page
|:tabrewind|                                                got to first tab page
'gdefault'                                       the ":substitute" flag 'g' is default on
'shellcmdflag'                                                     flag to shell to execute one command
'display'                                                  list of flags for how to display text
'cpoptions'                                                        flags for Vi-compatible behavior
'edcompatible'                                              toggle flags of ":substitute" command
'shortmess'                                                list of flags, reduce length of messages
'updatecount'                           after this many characters flush swap file
'updatetime'                          after this many milliseconds flush swap file
'mousefocus'                                              keyboard focus follows the mouse
|:fold|                                                   create a fold
|:folddoclosed|               execute command on lines in a closed fold
|:folddoopen|             execute command on lines not in a closed fold
'foldtext'                 expression used to display for a closed fold
'foldnestmax'                                              maximum fold depth
'commentstring'                    template for comments; used for fold marker
'foldminlines'                       minimum number of lines for a fold to be closed
'foldclose'                                                close a fold when the cursor leaves it
'foldopen'                                    for which commands a fold will be opened
'foldmethod'                                                       folding type
'foldlevelstart'                                                  'foldlevel' when starting to edit a file
'foldexpr'                                   expression used when 'foldmethod' is "expr"
'foldignore'                                    ignore lines when 'foldmethod' is "indent"
'foldmarker'                                    markers used when 'foldmethod' is "marker"
|:foldclose|                                                 close folds
|:foldopen|                                                   open folds
'foldcolumn'                  width of the column used to indicate folds
'foldenable'                                    set to display all folds open
'foldlevel'                                                  close folds with a level higher than this
|:noautocmd|                                                       following command don't trigger autocommands
|:keepjumps|                                                       following command keeps jumplist and marks
|:keepmarks|                                                       following command keeps marks where they are
|:lockmarks|                                                       following command keeps marks where they are
|:keepalt|                                                         following command keeps the alternate file
|:vertical|                                                   make following command split vertically
|:loadkeymap|                                             load the following keymaps until EOF
'mousefocus'                                        keyboard focus follows the mouse
'guifontwide'                                              list of font names for double-wide characters
'printmbfont'                                                      font names to be used for CJK output of :hardcopy
'printfont'                                            name of the font to be used for :hardcopy
'guifont'                                          GUI: Name(s) of font(s) to be used
'antialias'                      Mac OS X: use smooth, antialiased fonts
'guifontset'                              GUI: Names of multi-byte fonts to be used
|:redraw|                                                          force a redraw of the display
|:redrawstatus|                                                    force a redraw of the status line(s)
'tabline'                                                   custom format for the console tab pages line
'rulerformat'                                               custom format for the ruler
'statusline'                                                custom format for the status line
|:center|                                                          format lines at the center
'grepformat'                                                       format of 'grepprg' output
'printoptions'                                        controls the format of :hardcopy output
'printheader'                                                      format of the header used for :hardcopy
'fileformat'                                                  file format used for file I/O
'nrformats'                                                 number formats recognized for CTRL-A command
'formatoptions'                                      how automatic formatting is to be done
'shellslash'                                                   use forward slash for shell file names
'number'                                  print the line number in front of each line
'relativenumber'                      show relative line number in front of each line
'fsync'                                          whether to invoke fsync() after file write
'helpfile'                                                         full path name of the main help file
'showfulltag'                                                 show full tag pattern when completing tag
|:call|                                                     call a function
|:function|                                          define a user function
|:delfunction|                                       delete a user function
|:endfunction|                                       end of a user function
|:return|                                       return from a user function
'omnifunc'                                                         function for filetype-specific completion
'esckeys'                                                recognize function keys in Insert mode
|:profdel|                                        stop profiling a function or script
'operatorfunc'                                                     function to be called for |g@| operator
'completefunc'                                                     function to be used for Insert mode completion
'maxfuncdepth'                    maximum recursive depth for user functions
|:profile|                                               profiling functions and scripts
'gdefault'                                 the ":substitute" flag 'g' is default on
'operatorfunc'                          function to be called for |g@| operator
|:helptags|                                                        generate help tags for a directory
'ttymouse'                                     type of mouse codes generated
|:cgetbuffer|                                                      get errors from buffer
|:cgetexpr|                                                        get errors from expr
'conskey'                                                          get keys directly from console (MS-DOS only)
|:lgetbuffer|                                                      get locations from buffer
|:lgetexpr|                                                        get locations from expr
|:winpos|                                                          get or set window position
|:winsize|                                                         get or set window size (obsolete)
'path'                          list of directories searched with "gf" et.al.
'verbose'                                                          give informative messages
'cscopeverbose'                                                    give messages when adding a cscope database
|:argglobal|                                            define the global argument list
|:setglobal|                                                  show global values of options
|:spellundo|                                                remove good or bad word
|:spellgood|                                                   add good word for spelling
|:tabfirst|                                                        got to first tab page
|:tabrewind|                                                       got to first tab page
|:tablast|                                                         got to last tab page
'formatexpr'                                 expression used with "gq" command
'formatprg'                    name of external program used with "gq" command
'grepprg'                                     program to use for ":grep"
|:helpgrep|                                                 like ":grep" but searches help files
|:grepadd|                                                   like :grep, but append to current list
|:lgrepadd|                                                  like :grep, but append to current list
|:grep|                                                       run 'grepprg' and jump to first match
|:lgrep|                                                      run 'grepprg' and jump to first match
'grepformat'                                            format of 'grepprg' output
|:augroup|                                  select the autocommand group to use
'toolbariconsize'                   size of the toolbar icons (for GTK 2 only)
|:gui|                                                   start the GUI
|:gvim|                                                  start the GUI
|:promptrepl|                                                 open GUI dialog for search/replace
|:promptfind|                                                 open GUI dialog for searching
'guitablabel'                                                      GUI: custom label for a tab page
'guitabtooltip'                                                    GUI: custom tooltip for a tab page
'guifont'                                                          GUI: Name(s) of font(s) to be used
'guifontset'                                                       GUI: Names of multi-byte fonts to be used
'guiheadroom'                                                      GUI: pixels room for window decorations
'guicursor'                                                        GUI: settings for cursor shape and blinking
|:simalt|                                                    Win32 GUI: simulate Windows ALT key
'guipty'                                                           GUI: try to use a pseudo-tty for ":!" commands
'macatsui'                                                     Mac GUI: use ATSUI text drawing
'guioptions'                                                       GUI: Which components and options are used
'toolbar'                                                          GUI: which items to show in the toolbar
'winaltkeys'                               when the windows system handles ALT keys
'printmbcharset'                 CJK character set to be used for :hardcopy
'printexpr'               expression used to print PostScript for :hardcopy
'printmbfont'             font names to be used for CJK output of :hardcopy
'printheader'                       format of the header used for :hardcopy
'printfont'                       name of the font to be used for :hardcopy
'printdevice'                  name of the printer to be used for :hardcopy
'printoptions'                             controls the format of :hardcopy output
'modified'                                                  buffer has been modified
|:bmodified|             go to next buffer in the buffer list that has been modified
'laststatus'                                tells when last window has status lines
'smartcase'                            no ignore case when pattern has uppercase
|:oldfiles|                                        list files that have marks in the viminfo file
'weirdinvert'                                   for terminals that have weird inversion method
'formatlistpat'                   pattern used to recognize a list header
'printheader'                                        format of the header used for :hardcopy
'hkmap'                                                            Hebrew keyboard mapping
'hkmapp'                                                  phonetic Hebrew keyboard mapping
'aleph'                            ASCII code of the letter Aleph (Hebrew)
'altkeymap'                     for default second language (Farsi/Hebrew)
|:resize|                                    change current window height
'helpheight'                                               minimum height of a new help window
'cmdwinheight'                                                     height of the command-line window
'pumheight'                                                maximum height of the popup menu
'previewheight'                                                    height of the preview window
'winfixheight'                                         keep window height when opening/closing windows
'helpfile'                              full path name of the main help file
|:helpgrep|                              like ":grep" but searches help files
'helplang'                                               preferred help languages
|:helptags|                                               generate help tags for a directory
|:helpfind|                                       dialog to open a help window
'helpheight'                               minimum height of a new help window
|:help|                                                     open a help window
|:lhelpgrep|                                                like ":helpgrep" but uses location list
'conceallevel'                whether concealable text is shown or hidden
'concealcursor'                        whether concealable text is hidden in cursor line
|:hide|                                                            hide current buffer for a command
'mousehide'                                                        hide mouse pointer while typing
'foldlevel'                               close folds with a level higher than this
'colorcolumn'                                           columns to highlight
|:match|                                         define a match to highlight
'background'                           "dark" or "light", used for highlight colors
|:ownsyntax|                                  set new local syntax highlight for this window
'incsearch'                                                        highlight match while typing search pattern
'hlsearch'                                                         highlight matches with last search pattern
'cursorcolumn'                                                     highlight the screen column of the cursor
'cursorline'                                                       highlight the screen line of the cursor
|:nohlsearch|                                   suspend 'hlsearch' highlighting
|:syntax|                                                   syntax highlighting
'redrawtime'                   timeout for 'hlsearch' and |:match| highlighting
|:echohl|                                                      set highlighting for echo commands
|:highlight|                                               specify highlighting methods
'highlight'                                                   sets highlighting mode for various occasions
|:echoerr|                  like :echo, show like an error and use history
|:echomsg|                           same as :echo, put message in history
|:history|                                                 print a history list
'redrawtime'                                          timeout for 'hlsearch' and |:match| highlighting
|:nohlsearch|                                             suspend 'hlsearch' highlighting
'sidescroll'                   minimum number of columns to scroll horizontal
'fileformat'                             file format used for file I/O
'icon'                          let Vim set the text of the window icon
'iconstring'                             string to use for the Vim icon text
'toolbariconsize'                              size of the toolbar icons (for GTK 2 only)
|:ijump|                                     jump to definition of identifier
|:isplit|                   split window and jump to definition of identifier
|:ilist|                                          list lines where identifier matches
|:isearch|                                     list one line where identifier matches
'isident'                                   characters included in identifiers
'previewwindow'                                                    identifies the preview window
|:endif|                                             end previous :if
|:xit|                                                       write if buffer changed and quit window or Vim
'autowrite'                               automatically write file if changed
|:else|                                                part of an :if command
|:elseif|                                              part of an :if command
'showmatch'                       briefly jump to matching bracket if insert one
|:update|                                             write buffer if modified
'ignorecase'                                                       ignore case in search patterns
'smartcase'                                                     no ignore case when pattern has uppercase
'foldignore'                                                       ignore lines when 'foldmethod' is "indent"
'eventignore'                          autocommand events that are ignored
'suffixes'                                       suffixes that are ignored with multiple match
|:psearch|                                                  like ":ijump" but shows match in preview window
'imdisable'                                         do not use the IM in any mode
'iminsert'                                            use :lmap or IM in Insert mode
'imcmdline'                                                    use IM when starting to edit a command line
'imsearch'                                            use :lmap or IM when typing a search pattern
|:open|                                       start open mode (not implemented)
'include'                            pattern to be used to find an include file
'includeexpr'                        expression used to process an include line
'shellxquote'                               like 'shellquote', but include redirection
|:checkpath|                                                  list included files
'isfname'                                               characters included in file names and pathnames
'isident'                                               characters included in identifiers
'iskeyword'                                             characters included in keywords
|:lmap|                                           like ":map!" but includes Lang-Arg mode
|:lmapclear|                                 like ":mapclear!" but includes Lang-Arg mode
|:lnoremap|                                   like ":noremap!" but includes Lang-Arg mode
|:lunmap|                                       like ":unmap!" but includes Lang-Arg mode
'cinwords'                       words where 'si' and 'cin' add an indent
'autoindent'                                                  take indent for new line from previous line
'indentexpr'                         expression used to obtain the indent of a line
'shiftwidth'                     number of spaces to use for (auto)indent step
'copyindent'                        make 'autoindent' use existing indent structure
'preserveindent'                                      preserve the indent structure when reindenting
'shiftround'                                                 round indent to multiple of shiftwidth
'cinkeys'                                        keys that trigger indent when 'cindent' is set
'foldignore'                    ignore lines when 'foldmethod' is "indent"
'indentkeys'                     keys that trigger indenting with 'indentexpr'
'cindent'                                             do C program indenting
'lisp'                                                   automatic indenting for Lisp
'cinoptions'                                             how to do indenting when 'cindent' is set
'indentkeys'                                     keys that trigger indenting with 'indentexpr'
'lispwords'                             words that change how lisp indenting works
'foldcolumn'                           width of the column used to indicate folds
'ttyfast'                                                          indicates a fast terminal connection
'shelltype'                                                 Amiga: influences how to use a shell
|:version|                          print version number and other info
|:spellinfo|                                                  show info about loaded spell files
|:mksession|                                         write session info to a file
'osfiletype'                    operating system-specific filetype information
|:rundo|                                                 read undo information from a file
'undofile'                                               save undo information in a file
|:wundo|                                                write undo information to a file
'verbose'                                                     give informative messages
|:debuggreedy|                read debug mode commands from normal input
'bioskey'                               MS-DOS: use bios calls for input characters
'imactivatekey'                           key that activates the X input method
'allowrevins'                                      allow CTRL-_ in Insert and Command-line mode
|:put|                                                             insert contents of register in the text
|:imenu|                                              add menu for Insert mode
'digraph'                       enable the entering of digraphs in Insert mode
|:iabbrev|                                  like ":abbrev" but for Insert mode
|:iabclear|                                like ":abclear" but for Insert mode
|:imap|                                        like ":map" but for Insert mode
|:imapclear|                              like ":mapclear" but for Insert mode
|:inoreabbrev|                          like ":noreabbrev" but for Insert mode
|:inoremap|                                like ":noremap" but for Insert mode
|:inoremenu|                              like ":noremenu" but for Insert mode
|:iunabbrev|                              like ":unabbrev" but for Insert mode
|:iunmap|                                    like ":unmap" but for Insert mode
'esckeys'                               recognize function keys in Insert mode
|:iunmenu|                                         remove menu for Insert mode
|:startinsert|                                               start Insert mode
'insertmode'                           start the edit of a file in Insert mode
|:stopinsert|                                                 stop Insert mode
'iminsert'                                      use :lmap or IM in Insert mode
'completefunc'                             function to be used for Insert mode completion
'completeopt'                                          options for Insert mode completion
'complete'                                             specify how Insert mode completion works
'showmatch'                    briefly jump to matching bracket if insert one
|:insert|                                                          insert text
'textwidth'                    maximum width of text that is being inserted
'expandtab'                               use spaces when <Tab> is inserted
'smarttab'                                   use 'shiftwidth' when inserting <Tab>
'revins'                                                           inserting characters will work backwards
'visualbell'                                       use visual bell instead of beeping
'selectmode'                               when to use Select mode instead of Visual mode
'encoding'                                           encoding used internally
'mzquantum'                                                    the interval between polls for MzScheme threads
|:yank|                                                 yank lines into a register
|:read|                                                  read file into the text
|:intro|                                                 print the introductory message
'weirdinvert'                        for terminals that have weird inversion method
'fsync'                                                 whether to invoke fsync() after file write
|:wsverb|                           pass the verb to workshop over IPC
|:argedit|                  add item to the argument list and edit it
'foldclose'                    close a fold when the cursor leaves it
|:find|                               find file in 'path' and edit it
|:tabfind|                               find file in 'path', edit it in a new tab page
'hidden'                                  don't unload buffer when it is |abandon|ed
'cursorbind'                              move cursor in window as it moves in other windows
|:setfiletype|                              set 'filetype', unless it was set already
|:menutranslate|                            add a menu translation item
|:menu|                                           enter a new menu item
|:amenu|                                            enter new menu item for all modes
|:argedit|                                                     add item to the argument list and edit it
'fillchars'               characters to use for displaying special items
'synmaxcol'                          maximum column to find syntax items
|:argdelete|                                                delete items from the argument list
'menuitems'                                      maximum number of items in a menu
|:argdo|                                       do a command on all items in the argument list
'toolbar'                                               GUI: which items to show in the toolbar
|:argadd|                                                      add items to the argument list
'joinspaces'                      two spaces after a period with a join command
|:join|                                                            join lines
|:undojoin|                                                        join next change with previous undo block
|:tjump|                                      like ":tselect", but jump directly when there is only one match
|:jumps|                                                 print the jump list
|:djump|                                                           jump to #define
|:dsplit|                                         split window and jump to #define
|:stag|                                           split window and jump to a tag
|:cstag|                                             use cscope to jump to a tag
|:ijump|                                                           jump to definition of identifier
|:isplit|                                         split window and jump to definition of identifier
|:cexpr|                                 read errors from expr and jump to first
|:cfile|                         read file with error messages and jump to first
|:lfile|                              read file with locations and jump to first
|:lexpr|                              read locations from expr and jump to first
|:cbuffer|                                parse error messages and jump to first error
|:lbuffer|                                     parse locations and jump to first location
|:grep|                                          run 'grepprg' and jump to first match
|:lgrep|                                         run 'grepprg' and jump to first match
|:tfirst|                                                          jump to first matching tag
|:trewind|                                                         jump to first matching tag
|:tlast|                                                           jump to last matching tag
'showmatch'                                                briefly jump to matching bracket if insert one
|:tnext|                                                           jump to next matching tag
|:pop|                                                             jump to older entry in tag stack
|:tNext|                                                           jump to previous matching tag
|:tprevious|                                                       jump to previous matching tag
|:tag|                                                             jump to tag
|:ltag|                                                            jump to tag and add matching tags to the location list
|:drop|                                                            jump to window editing file or edit file in current window
|:keepjumps|                               following command keeps jumplist and marks
'keywordprg'                               program to use for the "K" command
'maxmemtot'                                     maximum memory (in Kbyte) used for all buffers
'maxmem'                                        maximum memory (in Kbyte) used for one buffer
'maxmempattern'                                 maximum memory (in Kbyte) used for pattern search
'backup'                                                           keep backup file after overwriting a file
'patchmode'                                                        keep the oldest version of a file
'winfixheight'                                                     keep window height when opening/closing windows
'winfixwidth'                                                      keep window width when opening/closing windows
|:keepjumps|                                     following command keeps jumplist and marks
|:keepmarks|                                     following command keeps marks where they are
|:lockmarks|                                     following command keeps marks where they are
|:keepalt|                                       following command keeps the alternate file
|:X|                                            ask for encryption key
'key'                                                   encryption key
|:simalt|                          Win32 GUI: simulate Windows ALT key
|:fixdel|                                                      set key code of <Del>
'pastetoggle'                                                      key code that causes 'paste' to toggle
'timeout'                                 time out on mappings and key codes
'ttimeoutlen'                                    time out time for key codes in milliseconds
'imactivatekey'                                                    key that activates the X input method
|:nbkey|                                                    pass a key to Netbeans
'cedit'                                                            key used to open the command-line window
'mousefocus'                                                       keyboard focus follows the mouse
'fkmap'                                                      Farsi keyboard mapping
'hkmap'                                                     Hebrew keyboard mapping
'keymap'                                                 name of a keyboard mapping
'hkmapp'                                           phonetic Hebrew keyboard mapping
|:loadkeymap|                                   load the following keymaps until EOF
'keymodel'                 enable starting/stopping selection with keys
'winaltkeys'                   when the windows system handles ALT keys
'conskey'                                                      get keys directly from console (MS-DOS only)
'esckeys'                                       recognize function keys in Insert mode
'cinkeys'                                                          keys that trigger indent when 'cindent' is set
'indentkeys'                                                       keys that trigger indenting with 'indentexpr'
'whichwrap'                                        allow specified keys to cross line boundaries
'infercase'                               adjust case of match for keyword completion
'dictionary'                           list of file names used for keyword completion
'thesaurus'                            list of thesaurus files for keyword completion
'iskeyword'                                 characters included in keywords
'guitablabel'                                          GUI: custom label for a tab page
|:lmap|                                  like ":map!" but includes Lang-Arg mode
|:lmapclear|                        like ":mapclear!" but includes Lang-Arg mode
|:lnoremap|                          like ":noremap!" but includes Lang-Arg mode
|:lunmap|                              like ":unmap!" but includes Lang-Arg mode
'arabic'                            for Arabic as a default second language
'altkeymap'                                     for default second language (Farsi/Hebrew)
|:language|                                                set the language (locale)
'langmap'                          alphabetic characters for other language mode
'langmenu'                                                         language to be used for the menus
'spelllang'                                                        language(s) to do spell checking for
'helplang'                                          preferred help languages
|:!!|                                                       repeat last ":!" command
|:&|                                                        repeat last ":substitute"
|:~|                                                        repeat last ":substitute"
|:blast|                                                     go to last buffer in the buffer list
|:undo|                                                       undo last change(s)
|:lNfile|                                                    go to last entry in previous file
|:cNfile|                                                    go to last error in previous file
|:cpfile|                                                    go to last error in previous file
|:sblast|                                   split window and go to last file in buffer list
|:last|                                                  go to the last file in the argument list
|:slast|                                    split window and go to last file in the argument list
'endofline'                                        write <EOL> for last line in file
|:lpfile|                                                    go to last location in previous file
|:tlast|                                                   jump to last matching tag
|:clast|                        go to the specified error, default last one
|:llast|                     go to the specified location, default last one
'hlsearch'                                  highlight matches with last search pattern
|:tablast|                                                  got to last tab page
'laststatus'                                            tells when last window has status lines
|:spellrepall|                          replace all bad words like last |z=|
|:undolist|                                                   list leafs of the undo tree
'foldclose'                           close a fold when the cursor leaves it
'rightleftcmd'           commands for which editing works right-to-left
|:topleft|                  make split window appear at top or far left
|:<|                                  shift lines one 'shiftwidth' left
|:left|                                                            left align lines
'sidescrolloff'                             min. nr. of columns to left and right of cursor
|:aboveleft|                              make split window appear left or above
|:leftabove|                              make split window appear left or above
'rightleft'                                     window is right-to-left oriented
'shortmess'                                  list of flags, reduce length of messages
'icon'                                                             let Vim set the text of the window icon
'title'                                                            let Vim set the title of the window
'aleph'                                          ASCII code of the letter Aleph (Hebrew)
'casemap'                                    specifies how case of letters is changed
'foldlevel'                                     close folds with a level higher than this
'background'                                            "dark" or "light", used for highlight colors
'startofline'           commands move cursor to first non-blank in line
'tabline'                  custom format for the console tab pages line
'statusline'                          custom format for the status line
|:luado|                              execute Lua command for each line
|:perldo|                            execute Perl command for each line
|:rubydo|                            execute Ruby command for each line
|:tcldo|                              execute Tcl command for each line
'indentexpr'             expression used to obtain the indent of a line
'includeexpr'                expression used to process an include line
'backspace'                        how backspace works at start of line
'wrap'                    long lines wrap and continue on the next line
'cmdheight'                 number of lines to use for the command-line
'comments'                       patterns that can start a comment line
'number'                    print the line number in front of each line
'showcmd'                         show (partial) command in status line
'ruler'                  show cursor line and column in the status line
'relativenumber'        show relative line number in front of each line
'autoindent'                take indent for new line from previous line
'imcmdline'                 use IM when starting to edit a command line
'concealcursor'       whether concealable text is hidden in cursor line
'ruler'                                                show cursor line and column in the status line
'whichwrap'                          allow specified keys to cross line boundaries
'breakat'                              characters that may cause a line break
'wildchar'                                                 command-line character for wildcard expansion
'wildmenu'                                    use menu for command line completion
'wildoptions'                                specifies how command line completion is done
'wildmode'                             mode for 'wildchar' command-line expansion
'autoindent'                                   take indent for new line from previous line
'endofline'                                   write <EOL> for last line in file
'showtabline'                             tells when the tab pages line is displayed
|:cmenu|                                      add menu for Command-line mode
'allowrevins'                   allow CTRL-_ in Insert and Command-line mode
|:cabclear|                    clear all abbreviations for Command-line mode
|:cmapclear|                        clear all mappings for Command-line mode
|:cabbrev|                      like ":abbreviate" but for Command-line mode
|:cmap|                                like ":map" but for Command-line mode
|:cnoreabbrev|                  like ":noreabbrev" but for Command-line mode
|:cnoremap|                        like ":noremap" but for Command-line mode
|:cnoremenu|                      like ":noremenu" but for Command-line mode
|:cunabbrev|                      like ":unabbrev" but for Command-line mode
|:cunmap|                            like ":unmap" but for Command-line mode
|:cunmenu|                                 remove menu for Command-line mode
'numberwidth'                       number of columns used for the line number
|:number|                                         print lines with line number
|:=|                                              print the cursor line number
'number'                                                 print the line number in front of each line
'relativenumber'                                     show relative line number in front of each line
'cursorline'                                  highlight the screen line of the cursor
|:change|                                                replace a line or series of lines
'showmode'                                       message on status line to show current mode
|:isearch|                                                list one line where identifier matches
'cmdwinheight'                               height of the command-line window
'cedit'                               key used to open the command-line window
|:redrawstatus|                       force a redraw of the status line(s)
|:copy|                                                       copy lines
|:delete|                                                   delete lines
|:global|                            execute commands for matching lines
|:vglobal|                       execute commands for not matching lines
|:join|                                                       join lines
|:left|                                                 left align lines
|:move|                                                       move lines
|:Print|                                                     print lines
|:list|                                                      print lines
|:print|                                                     print lines
|:z|                                                    print some lines
|:change|                              replace a line or series of lines
|:sort|                                                       sort lines
'showbreak'                  string to use at the start of wrapped lines
'laststatus'                     tells when last window has status lines
'scrolloff'                                         minimum nr. of lines above and below cursor
'linebreak'                                              wrap long lines at a blank
|:center|                                                   format lines at the center
'report'                            threshold for reporting nr. of lines changed
'modelines'                                              number of lines checked for modelines
'foldminlines'                                   minimum number of lines for a fold to be closed
'ttyscroll'                                      maximum number of lines for a scroll
'winminheight'                                   minimum number of lines for any window
'winheight'                                      minimum number of lines for the current window
|:folddoclosed|                                 execute command on lines in a closed fold
'lines'                                                  number of lines in the display
'errorformat'                                   description of the lines in the error file
|:yank|                                                       yank lines into a register
|:folddoopen|                                   execute command on lines not in a closed fold
|:<|                                                         shift lines one 'shiftwidth' left
|:>|                                                         shift lines one 'shiftwidth' right
|:!|                                                        filter lines or execute an external command
'history'                                        number of command-lines that are remembered
'undoreload'                                             max nr of lines to save for undo on a buffer reload
'scrolljump'                                     minimum number of lines to scroll
'window'                                                     nr of lines to scroll for CTRL-F and CTRL-B
'scroll'                                                           lines to scroll with CTRL-U and CTRL-D
'linespace'                                        number of pixel lines to use between characters
'cmdheight'                                              number of lines to use for the command-line
'foldignore'                                                ignore lines when 'foldmethod' is "indent"
|:ilist|                                                      list lines where identifier matches
|:number|                                                    print lines with line number
'wrap'                                                        long lines wrap and continue on the next line
'lisp'                                     automatic indenting for Lisp
'lispwords'                                  words that change how lisp indenting works
|:badd|                                   add buffer to the buffer list
|:caddfile|                  add error message to current quickfix list
|:argadd|                                add items to the argument list
|:laddfile|                      add locations to current location list
|:arglocal|                                define a local argument list
|:argglobal|                            define the global argument list
|:argdelete|                        delete items from the argument list
|:argdo|                 do a command on all items in the argument list
|:bfirst|                         go to first buffer in the buffer list
|:brewind|                        go to first buffer in the buffer list
|:blast|                           go to last buffer in the buffer list
|:cnewer|                                        go to newer error list
|:lnewer|                                     go to newer location list
|:bnext|                           go to next buffer in the buffer list
|:next|                            go to next file in the argument list
|:colder|                                        go to older error list
|:lolder|                                     go to older location list
|:bNext|                       go to previous buffer in the buffer list
|:bprevious|                   go to previous buffer in the buffer list
|:lNext|                          go to previous entry in location list
|:previous|                        go to previous file in argument list
|:Next|                        go to previous file in the argument list
|:buffer|                      go to specific buffer in the buffer list
|:argument|                    go to specific file in the argument list
|:first|                      go to the first file in the argument list
|:rewind|                     go to the first file in the argument list
|:last|                        go to the last file in the argument list
|:ltag|          jump to tag and add matching tags to the location list
|:lcscope|                        like ":cscope" but uses location list
|:lhelpgrep|                    like ":helpgrep" but uses location list
|:grepadd|                       like :grep, but append to current list
|:lgrepadd|                      like :grep, but append to current list
|:lvimgrepadd|                like :vimgrep, but append to current list
|:vimgrepadd|                 like :vimgrep, but append to current list
|:buffers|                            list all files in the buffer list
|:files|                              list all files in the buffer list
|:ball|                open a window for each buffer in the buffer list
|:sall|                    open a window for each file in argument list
|:all|                 open a window for each file in the argument list
|:sball|                 open a window for each file in the buffer list
|:unhide|         open a window for each loaded file in the buffer list
|:history|                                         print a history list
|:args|                                         print the argument list
|:changes|                                        print the change list
|:jumps|                                            print the jump list
|:bdelete|                         remove a buffer from the buffer list
|:sfirst|        split window and go to first file in the argument list
|:srewind|       split window and go to first file in the argument list
|:sbfirst|         split window and go to first file in the buffer list
|:sbrewind|        split window and go to first file in the buffer list
|:sblast|               split window and go to last file in buffer list
|:slast|          split window and go to last file in the argument list
|:sbmodified|   split window and go to modified file in the buffer list
|:snext|          split window and go to next file in the argument list
|:sbnext|           split window and go to next file in the buffer list
|:sNext|          split window and go to previous file in argument list
|:sprevious|  split window and go to previous file in the argument list
|:sbNext|       split window and go to previous file in the buffer list
|:sbprevious|   split window and go to previous file in the buffer list
|:sargument|      split window and go to specific file in argument list
|:sbuffer|      split window and go to specific file in the buffer list
'buflisted'              whether the buffer shows up in the buffer list
|:wnext|           write to a file and go to next file in argument list
|:wNext|       write to a file and go to previous file in argument list
|:wprevious|   write to a file and go to previous file in argument list
|:dlist|                                                           list #defines
|:ls|                                                              list all buffers
|:clist|                                                           list all errors
|:buffers|                                                         list all files in the buffer list
|:files|                                                           list all files in the buffer list
|:llist|                                                           list all locations
|:marks|                                                           list all marks
|:argedit|                                add item to the argument list and edit it
|:breaklist|                                                       list debugger breakpoints
|:oldfiles|                                                        list files that have marks in the viminfo file
'formatlistpat'                        pattern used to recognize a list header
|:checkpath|                                                       list included files
|:undolist|                                                        list leafs of the undo tree
|:ilist|                                                           list lines where identifier matches
|:tselect|                                                         list matching tags and select one
'listchars'                           characters for displaying in list mode
|:scriptnames|                                                     list names of all sourced Vim scripts
'backupdir'                                                        list of directories for the backup file
'cdpath'                                                           list of directories searched with ":cd"
'path'                                                             list of directories searched with "gf" et.al.
'runtimepath'                                                      list of directories used for runtime files
'directory'                                                        list of directory names for the swap file
'tags'                                                             list of file names used by the tag command
'dictionary'                                                       list of file names used for keyword completion
'display'                                                          list of flags for how to display text
'shortmess'                                                        list of flags, reduce length of messages
'guifontwide'                                                      list of font names for double-wide characters
'thesaurus'                                                        list of thesaurus files for keyword completion
|:dsearch|                                                         list one #define
|:isearch|                                                         list one line where identifier matches
|:bmodified|                       go to next buffer in the buffer list that has been modified
|:tabs|                                                            list the tab pages and what they contain
|:bufdo|                                   execute command in each listed buffer
'more'                                                       pause listings when the whole screen is filled
'iminsert'                                                    use :lmap or IM in Insert mode
'imsearch'                                                    use :lmap or IM when typing a search pattern
|:colorscheme|                                                     load a specific color scheme
'loadplugins'                                                      load plugin scripts when starting up
|:loadkeymap|                                                      load the following keymaps until EOF
|:loadview|                                                        load view for current window from a file
|:doautoall|                            apply autocommands for all loaded buffers
|:checktime|                                    check timestamp of loaded buffers
|:unhide|                                   open a window for each loaded file in the buffer list
'syntax'                                              syntax to be loaded for current buffer
|:spellinfo|                                       show info about loaded spell files
|:arglocal|                                               define a local argument list
|:ownsyntax|                                               set new local syntax highlight for this window
|:language|                                      set the language (locale)
|:lcd|                                            change directory locally
|:lchdir|                                         change directory locally
|:setlocal|                                    show or set options locally
'spellcapcheck'                                         pattern to locate end of a sentence
|:lnext|                                                go to next location
|:lprevious|                                        go to previous location
|:ll|                                               go to specific location
|:lbuffer|                       parse locations and jump to first location
|:lnfile|                                              go to first location in next file
|:lpfile|                                               go to last location in previous file
|:laddfile|                               add locations to current location list
|:lnewer|                                              go to newer location list
|:lolder|                                              go to older location list
|:lNext|                                   go to previous entry in location list
|:ltag|                   jump to tag and add matching tags to the location list
|:lcscope|                                 like ":cscope" but uses location list
|:lhelpgrep|                             like ":helpgrep" but uses location list
|:lclose|                                                    close location window
|:lopen|                                                      open location window
|:lwindow|                                           open or close location window
|:lfirst|                                      go to the specified location, default first one
|:lrewind|                                     go to the specified location, default first one
|:llast|                                       go to the specified location, default last one
|:llist|                                                  list all locations
|:lgetfile|                                         read file with locations
|:lfile|                                            read file with locations and jump to first
|:lbuffer|                                                   parse locations and jump to first location
|:laddbuffer|                                                  add locations from buffer
|:lgetbuffer|                                                  get locations from buffer
|:laddexpr|                                                    add locations from expr
|:lgetexpr|                                                    get locations from expr
|:lexpr|                                                      read locations from expr and jump to first
|:laddfile|                                                    add locations to current location list
|:lockvar|                                                         lock variables
|:while|                                       execute loop for as long as condition met
'linebreak'                                                   wrap long lines at a blank
'wrap'                                                             long lines wrap and continue on the next line
'bufhidden'                           what to do when buffer is no longer in window
|:break|                                        break out of while loop
|:for|                                                         for loop
|:while|                                                   execute loop for as long as condition met
|:luado|                                                   execute Lua command for each line
|:lua|                                                    execute |Lua| command
|:luafile|                                                execute |Lua| script file
'macatsui'                                                         Mac GUI: use ATSUI text drawing
'antialias'                                                        Mac OS X: use smooth, antialiased fonts
'define'                              pattern to be used to find a macro definition
'lazyredraw'                          don't redraw while executing macros
'paragraphs'                                                 nroff macros that separate paragraphs
'sections'                                                   nroff macros that separate sections
'equalalways'                            windows are automatically made the same size
|:smagic|                                        :substitute with 'magic'
'helpfile'                                   full path name of the main help file
'copyindent'                                                       make 'autoindent' use existing indent structure
'writebackup'                                                      make a backup before overwriting a file
'backupcopy'                                                       make backup as a copy, don't rename the file
|:diffthis|                                                        make current window a diff window
|:vertical|                                                        make following command split vertically
|:botright|                                                        make split window appear at bottom or far right
|:topleft|                                                         make split window appear at top or far left
|:aboveleft|                                                       make split window appear left or above
|:leftabove|                                                       make split window appear left or above
|:belowright|                                                      make split window appear right or below
|:rightbelow|                                                      make split window appear right or below
'makeef'                               name of the errorfile for ":make"
'makeprg'                                 program to use for the ":make" command
'shellpipe'                              string to put output of ":make" in error file
|:lmake|                                 execute external command 'makeprg' and parse error messages
|:make|                                  execute external command 'makeprg' and parse error messages
|:sign|                                                            manipulate signs
'updatecount'                                           after this many characters flush swap file
'cscopepathcomp'                                               how many components of the path to show
'updatetime'                                            after this many milliseconds flush swap file
'writedelay'                                            delay this many msec for each char (for debug)
|:lmap|                                                     like ":map!" but includes Lang-Arg mode
|:cmap|                                                     like ":map" but for Command-line mode
|:imap|                                                     like ":map" but for Insert mode
|:nmap|                                                     like ":map" but for Normal mode
|:omap|                                                     like ":map" but for Operator-pending mode
|:smap|                                                     like ":map" but for Select mode
|:xmap|                                                     like ":map" but for Visual mode
|:vmap|                                                     like ":map" but for Visual+Select mode
|:lmapclear|                                                like ":mapclear!" but includes Lang-Arg mode
|:imapclear|                                                like ":mapclear" but for Insert mode
'wildcharm'                    like 'wildchar' but also works when mapped
'fkmap'                                             Farsi keyboard mapping
'hkmap'                                            Hebrew keyboard mapping
'maxmapdepth'                          maximum recursive depth for mapping
'keymap'                                        name of a keyboard mapping
'hkmapp'                                  phonetic Hebrew keyboard mapping
|:unmap|                                                    remove mapping
|:map|                                             show or enter a mapping
|:noremap|                                                 enter a mapping that will not be remapped
'ttimeout'                                             time out on mappings
'timeout'                                              time out on mappings and key codes
|:mkexrc|                                            write current mappings and settings to a file
|:mkvimrc|                                           write current mappings and settings to a file
|:cmapclear|                                             clear all mappings for Command-line mode
|:mapclear|                                              clear all mappings for Normal and Visual mode
|:nmapclear|                                             clear all mappings for Normal mode
|:omapclear|                                            remove all mappings for Operator-pending mode
|:smapclear|                                            remove all mappings for Select mode
|:xmapclear|                                            remove all mappings for Visual mode
|:vmapclear|                                            remove all mappings for Visual+Select mode
'remap'                                                      allow mappings to work recursively
|:k|                                                         set a mark
|:mark|                                                      set a mark
'bomb'                                        prepend a Byte Order Mark to the file
'commentstring'               template for comments; used for fold marker
'foldmarker'                    markers used when 'foldmethod' is "marker"
'foldmarker'                                                       markers used when 'foldmethod' is "marker"
|:delmarks|                                                 delete marks
|:keepjumps|                  following command keeps jumplist and marks
|:marks|                                                  list all marks
|:oldfiles|                                   list files that have marks in the viminfo file
|:keepmarks|                               following command keeps marks where they are
|:lockmarks|                               following command keeps marks where they are
|:tjump| like ":tselect", but jump directly when there is only one match
'matchpairs'                      pairs of characters that "%" can match
|:grep|                            run 'grepprg' and jump to first match
|:lgrep|                           run 'grepprg' and jump to first match
'suffixes'                 suffixes that are ignored with multiple match
'infercase'                                         adjust case of match for keyword completion
|:psearch|                                 like ":ijump" but shows match in preview window
'backupskip'                              no backup for files that match these patterns
|:match|                                                  define a match to highlight
'incsearch'                                              highlight match while typing search pattern
|:ilist|                               list lines where identifier matches
|:isearch|                          list one line where identifier matches
'hlsearch'                                               highlight matches with last search pattern
'showmatch'                                        briefly jump to matching bracket if insert one
|:global|                                     execute commands for matching lines
|:vglobal|                                execute commands for not matching lines
'matchtime'                             tenths of a second to show matching paren
|:tfirst|                                            jump to first matching tag
|:trewind|                                           jump to first matching tag
|:tlast|                                              jump to last matching tag
|:tnext|                                              jump to next matching tag
|:tNext|                                          jump to previous matching tag
|:tprevious|                                      jump to previous matching tag
|:tselect|                                                    list matching tags and select one
|:ltag|                                        jump to tag and add matching tags to the location list
'wildignore'                                                 files matching these patterns are not completed
'redrawtime'                          timeout for 'hlsearch' and |:match| highlighting
'undoreload'                                                       max nr of lines to save for undo on a buffer reload
'mousetime'                                                        max time between mouse double-click
'synmaxcol'                                                        maximum column to find syntax items
'foldnestmax'                                                      maximum fold depth
'pumheight'                                                        maximum height of the popup menu
'maxmemtot'                                                        maximum memory (in Kbyte) used for all buffers
'maxmem'                                                           maximum memory (in Kbyte) used for one buffer
'maxmempattern'                                                    maximum memory (in Kbyte) used for pattern search
'maxcombine'                                                       maximum nr of combining characters displayed
'undolevels'                                                       maximum number of changes that can be undone
'menuitems'                                                        maximum number of items in a menu
'ttyscroll'                                                        maximum number of lines for a scroll
'tabpagemax'                                                       maximum number of tab pages for |-p| and "tab all"
'maxmapdepth'                                                      maximum recursive depth for mapping
'maxfuncdepth'                                                     maximum recursive depth for user functions
'textwidth'                                                        maximum width of text that is being inserted
'breakat'                                          characters that may cause a line break
'balloondelay'                        delay in mS before a balloon may pop up
'mousemodel'                                               changes meaning of mouse buttons
'maxmemtot'                                                maximum memory (in Kbyte) used for all buffers
'maxmem'                                                   maximum memory (in Kbyte) used for one buffer
'maxmempattern'                                            maximum memory (in Kbyte) used for pattern search
'mkspellmem'                                                       memory used before |:mkspell| compresses the tree
'pumheight'                            maximum height of the popup menu
'menuitems'                           maximum number of items in a menu
|:unmenu|                                                   remove menu
|:tearoff|                                              tear-off a menu
|:emenu|                                                 execute a menu by name
|:popup|                                                   popup a menu by name
|:aunmenu|                                                  remove menu for all modes
|:anoremenu|                                           enter a new menu for all modes that will not be remapped
'wildmenu'                                                     use menu for command line completion
|:cmenu|                                                       add menu for Command-line mode
|:cunmenu|                                                  remove menu for Command-line mode
|:imenu|                                                       add menu for Insert mode
|:iunmenu|                                                  remove menu for Insert mode
|:nmenu|                                                       add menu for Normal mode
|:nunmenu|                                                  remove menu for Normal mode
|:omenu|                                                       add menu for Operator-pending mode
|:ounmenu|                                                  remove menu for Operator-pending mode
|:smenu|                                                       add menu for Select mode
|:sunmenu|                                                  remove menu for Select mode
|:xmenu|                                                       add menu for Visual mode
|:xunmenu|                                                  remove menu for Visual mode
|:vmenu|                                                       add menu for Visual+Select mode
|:vunmenu|                                                  remove menu for Visual+Select mode
|:menu|                                                enter a new menu item
|:amenu|                                                 enter new menu item for all modes
|:noremenu|                                                enter a menu that will not be remapped
|:tmenu|                                                    define menu tooltip
|:tunmenu|                                                  remove menu tooltip
|:menutranslate|                                             add a menu translation item
'langmenu'                             language to be used for the menus
|:intro|                                    print the introductory message
|:echomsg|                                      same as :echo, put message in history
'showmode'                                                         message on status line to show current mode
|:caddfile|                                              add error message to current quickfix list
|:lmake|        execute external command 'makeprg' and parse error messages
|:make|         execute external command 'makeprg' and parse error messages
'verbose'                                         give informative messages
'shortmess'                        list of flags, reduce length of messages
|:cgetfile|                                   read file with error messages
'errorbells'                               ring the bell for error messages
'debug'                              set to "msg" to see all error messages
'terse'                                               shorten some messages
|:messages|                              view previously displayed messages
|:cfile|                                      read file with error messages and jump to first
|:cbuffer|                                             parse error messages and jump to first error
'verbosefile'                                        file to write messages in
|:redir|                                                  redirect messages to a file or register
'cscopeverbose'                                               give messages when adding a cscope database
|:if|                              execute commands when condition met
|:while|                     execute loop for as long as condition met
'weirdinvert'              for terminals that have weird inversion method
'imactivatekey'                     key that activates the X input method
'spellsuggest'                                                     method(s) used to suggest spelling corrections
|:highlight|                                  specify highlighting methods
'ttimeoutlen'                       time out time for key codes in milliseconds
'timeoutlen'                                      time out time in milliseconds
'updatetime'                                       after this many milliseconds flush swap file
'sidescrolloff'                                                    min. nr. of columns to left and right of cursor
'winminwidth'                                                      minimal number of columns for any window
'winwidth'                                                         minimal number of columns for current window
'helpheight'                                                       minimum height of a new help window
'scrolloff'                                                        minimum nr. of lines above and below cursor
'sidescroll'                                                       minimum number of columns to scroll horizontal
'foldminlines'                                                     minimum number of lines for a fold to be closed
'winminheight'                                                     minimum number of lines for any window
'winheight'                                                        minimum number of lines for the current window
'scrolljump'                                                       minimum number of lines to scroll
|:spellwrong|                                         add spelling mistake
'sessionoptions'                                     options for |:mksession|
'mkspellmem'                                  memory used before |:mkspell| compresses the tree
'viewdir'                     directory where to store files with :mkview
'viewoptions'                          specifies what to save for :mkview
|:cmenu|                                 add menu for Command-line mode
|:imenu|                                       add menu for Insert mode
|:nmenu|                                       add menu for Normal mode
|:omenu|                             add menu for Operator-pending mode
|:smenu|                                       add menu for Select mode
|:xmenu|                                       add menu for Visual mode
|:vmenu|                                add menu for Visual+Select mode
'allowrevins'              allow CTRL-_ in Insert and Command-line mode
'langmap'                 alphabetic characters for other language mode
'listchars'                      characters for displaying in list mode
|:cabclear|               clear all abbreviations for Command-line mode
|:cmapclear|                   clear all mappings for Command-line mode
|:mapclear|               clear all mappings for Normal and Visual mode
|:nmapclear|                         clear all mappings for Normal mode
'imdisable'                               do not use the IM in any mode
'digraph'                enable the entering of digraphs in Insert mode
|:iabbrev|                           like ":abbrev" but for Insert mode
|:cabbrev|                 like ":abbreviate" but for Command-line mode
|:iabclear|                         like ":abclear" but for Insert mode
|:lmap|                         like ":map!" but includes Lang-Arg mode
|:cmap|                           like ":map" but for Command-line mode
|:imap|                                 like ":map" but for Insert mode
|:nmap|                                 like ":map" but for Normal mode
|:omap|                       like ":map" but for Operator-pending mode
|:smap|                                 like ":map" but for Select mode
|:xmap|                                 like ":map" but for Visual mode
|:vmap|                          like ":map" but for Visual+Select mode
|:lmapclear|               like ":mapclear!" but includes Lang-Arg mode
|:imapclear|                       like ":mapclear" but for Insert mode
|:cnoreabbrev|             like ":noreabbrev" but for Command-line mode
|:inoreabbrev|                   like ":noreabbrev" but for Insert mode
|:lnoremap|                 like ":noremap!" but includes Lang-Arg mode
|:cnoremap|                   like ":noremap" but for Command-line mode
|:inoremap|                         like ":noremap" but for Insert mode
|:nnoremap|                         like ":noremap" but for Normal mode
|:onoremap|               like ":noremap" but for Operator-pending mode
|:snoremap|                         like ":noremap" but for Select mode
|:xnoremap|                         like ":noremap" but for Visual mode
|:vnoremap|                  like ":noremap" but for Visual+Select mode
|:cnoremenu|                 like ":noremenu" but for Command-line mode
|:inoremenu|                       like ":noremenu" but for Insert mode
|:nnoremenu|                       like ":noremenu" but for Normal mode
|:onoremenu|             like ":noremenu" but for Operator-pending mode
|:snoremenu|                       like ":noremenu" but for Select mode
|:xnoremenu|                       like ":noremenu" but for Visual mode
|:vnoremenu|                like ":noremenu" but for Visual+Select mode
|:cunabbrev|                 like ":unabbrev" but for Command-line mode
|:iunabbrev|                       like ":unabbrev" but for Insert mode
|:lunmap|                     like ":unmap!" but includes Lang-Arg mode
|:cunmap|                       like ":unmap" but for Command-line mode
|:iunmap|                             like ":unmap" but for Insert mode
|:nunmap|                             like ":unmap" but for Normal mode
|:ounmap|                   like ":unmap" but for Operator-pending mode
|:sunmap|                             like ":unmap" but for Select mode
|:xunmap|                             like ":unmap" but for Visual mode
|:vunmap|                      like ":unmap" but for Visual+Select mode
'showmode'                  message on status line to show current mode
'errorfile'                 name of the errorfile for the QuickFix mode
'diffopt'                                   options for using diff mode
'binary'                            read/write/edit file in binary mode
'esckeys'                        recognize function keys in Insert mode
|:omapclear|              remove all mappings for Operator-pending mode
|:smapclear|                        remove all mappings for Select mode
|:xmapclear|                        remove all mappings for Visual mode
|:vmapclear|                 remove all mappings for Visual+Select mode
|:cunmenu|                            remove menu for Command-line mode
|:iunmenu|                                  remove menu for Insert mode
|:nunmenu|                                  remove menu for Normal mode
|:ounmenu|                        remove menu for Operator-pending mode
|:sunmenu|                                  remove menu for Select mode
|:xunmenu|                                  remove menu for Visual mode
|:vunmenu|                           remove menu for Visual+Select mode
|:debug|                                run a command in debugging mode
|:visual|                      same as ":edit", but turns off "Ex" mode
|:mode|                                  show or change the screen mode
|:startinsert|                                        start Insert mode
|:startreplace|                                      start Replace mode
'insertmode'                    start the edit of a file in Insert mode
|:startgreplace|                             start Virtual Replace mode
|:stopinsert|                                          stop Insert mode
|:diffoff|                                         switch off diff mode
'iminsert'                               use :lmap or IM in Insert mode
'selectmode'             when to use Select mode instead of Visual mode
|:open|                                                 start open mode (not implemented)
|:normal|                                           execute Normal mode commands
|:viusage|                                      overview of Normal mode commands
|:debuggreedy|                                          read debug mode commands from normal input
'completefunc'                      function to be used for Insert mode completion
'completeopt'                                   options for Insert mode completion
'complete'                                      specify how Insert mode completion works
'wildmode'                                                         mode for 'wildchar' command-line expansion
'secure'                                                    secure mode for reading .vimrc in current dir
'diff'                                                    use diff mode for the current window
'highlight'                                      sets highlighting mode for various occasions
'selectmode'                                    when to use Select mode instead of Visual mode
'modelines'                            number of lines checked for modelines
'modeline'                                               recognize modelines at start or end of file
|:amenu|                               enter new menu item for all modes
|:aunmenu|                                     remove menu for all modes
'mouseshape'               shape of the mouse pointer in different modes
|:anoremenu|                              enter a new menu for all modes that will not be remapped
'modified'                                         buffer has been modified
|:bmodified|    go to next buffer in the buffer list that has been modified
|:update|                                          write buffer if modified
|:sbmodified|                               split window and go to modified file in the buffer list
'autowriteall'                      as 'autowrite', but works with more commands
'mousefocus'                            keyboard focus follows the mouse
|:behave|                                                      set mouse and selection behavior
'mousemodel'                                    changes meaning of mouse buttons
'mouse'                                          enable the use of mouse clicks
'ttymouse'                                                 type of mouse codes generated
'mousetime'                                       max time between mouse double-click
'mouseshape'                                          shape of the mouse pointer in different modes
'mousehide'                                                   hide mouse pointer while typing
'cursorbind'                                                       move cursor in window as it moves in other windows
'startofline'                                             commands move cursor to first non-blank in line
|:move|                                                            move lines
|:tabmove|                                                         move tab page to other position
'cursorbind'                           move cursor in window as it moves in other windows
'balloondelay'                                            delay in mS before a balloon may pop up
'conskey'                          get keys directly from console (MS-DOS only)
'shortname'                                                    non-MS-DOS: Filenames assumed to be 8.3 chars
'bioskey'                                                          MS-DOS: use bios calls for input characters
'opendevice'                      allow reading/writing devices on MS-Windows
'writedelay'                                       delay this many msec for each char (for debug)
'debug'                                                    set to "msg" to see all error messages
'compatible'                               behave Vi-compatible as much as possible
'guifontset'                                         GUI: Names of multi-byte fonts to be used
'fileencoding'                                   file encoding for multi-byte text
'suffixes'                          suffixes that are ignored with multiple match
'shiftround'                                       round indent to multiple of shiftwidth
|:mzscheme|                                                execute MzScheme command
|:mzfile|                                                  execute MzScheme script file
'mzquantum'                         the interval between polls for MzScheme threads
|:emenu|                                         execute a menu by name
|:popup|                                           popup a menu by name
|:file|                               show or set the current file name
'keymap'                                                           name of a keyboard mapping
'formatprg'                                                        name of external program used with "gq" command
'shell'                                                            name of shell to use for external commands
|:swapname|                                               show the name of the current swap file
'makeef'                                                           name of the errorfile for ":make"
'errorfile'                                                        name of the errorfile for the QuickFix mode
'printfont'                                                        name of the font to be used for :hardcopy
'helpfile'                                               full path name of the main help file
'printdevice'                                                      name of the printer to be used for :hardcopy
'term'                                                             name of the terminal
'guifont'                                                     GUI: Name(s) of font(s) to be used
|:saveas|                                  save file under another name.
'shellslash'                      use forward slash for shell file names
'isfname'                              characters included in file names and pathnames
'guifontwide'                                         list of font names for double-wide characters
'directory'                                      list of directory names for the swap file
'tagrelative'                                                 file names in tag file are relative
|:scriptnames|                                                list names of all sourced Vim scripts
'guifontset'                                                  GUI: Names of multi-byte fonts to be used
'printmbfont'                                                 font names to be used for CJK output of :hardcopy
'tags'                                                list of file names used by the tag command
'dictionary'                                          list of file names used for keyword completion
'writeany'                                   write to file with no need for "!" override
|:nbkey|                                             pass a key to Netbeans
|:nbclose|                                       close the current Netbeans session
|:nbstart|                                             start a new Netbeans session
|:new|                                                    create a new empty window
|:vnew|                                                   create a new empty window, vertically split
'helpheight'                                   minimum height of a new help window
'autoindent'                                       take indent for new line from previous line
|:ownsyntax|                                                   set new local syntax highlight for this window
|:anoremenu|                                               enter a new menu for all modes that will not be remapped
|:menu|                                                    enter a new menu item
|:amenu|                                                     enter new menu item for all modes
|:nbstart|                                                 start a new Netbeans session
|:tabedit|                                        edit a file in a new tab page
|:tabnew|                                         edit a file in a new tab page
|:tabfind|                       find file in 'path', edit it in a new tab page
|:tab|                                                      create new tab when opening new window
|:tab|                                 create new tab when opening new window
'splitbelow'                                                       new window from split is below the current one
'splitright'                                                       new window is put right of the current one
|:enew|                                                     edit a new, unnamed buffer
|:later|                                                     go to newer change, redo
|:cnewer|                                                    go to newer error list
|:lnewer|                                                    go to newer location list
|:bnext|                                                     go to next buffer in the buffer list
|:bmodified|                                                 go to next buffer in the buffer list that has been modified
|:undojoin|                                                   join next change with previous undo block
|:cnext|                                                     go to next error
|:cnfile|                                     go to first error in next file
|:lnfile|                                  go to first location in next file
|:wnext|                                 write to a file and go to next file in argument list
|:next|                                                      go to next file in the argument list
|:snext|                                    split window and go to next file in the argument list
|:sbnext|                                   split window and go to next file in the buffer list
'wrap'                         long lines wrap and continue on the next line
|:lnext|                                                     go to next location
|:tnext|                                                   jump to next matching tag
|:tabnext|                                                   go to next tab page
'backupskip'                                                       no backup for files that match these patterns
'smartcase'                                                        no ignore case when pattern has uppercase
'bufhidden'                              what to do when buffer is no longer in window
'writeany'                                      write to file with no need for "!" override
|:snomagic|                                      :substitute with 'nomagic'
'startofline'                        commands move cursor to first non-blank in line
'shortname'                                                        non-MS-DOS: Filenames assumed to be 8.3 chars
|:cnoreabbrev|                                              like ":noreabbrev" but for Command-line mode
|:inoreabbrev|                                              like ":noreabbrev" but for Insert mode
|:lnoremap|                                                 like ":noremap!" but includes Lang-Arg mode
|:cnoremap|                                                 like ":noremap" but for Command-line mode
|:inoremap|                                                 like ":noremap" but for Insert mode
|:nnoremap|                                                 like ":noremap" but for Normal mode
|:onoremap|                                                 like ":noremap" but for Operator-pending mode
|:snoremap|                                                 like ":noremap" but for Select mode
|:xnoremap|                                                 like ":noremap" but for Visual mode
|:vnoremap|                                                 like ":noremap" but for Visual+Select mode
|:cnoremenu|                                                like ":noremenu" but for Command-line mode
|:inoremenu|                                                like ":noremenu" but for Insert mode
|:nnoremenu|                                                like ":noremenu" but for Normal mode
|:onoremenu|                                                like ":noremenu" but for Operator-pending mode
|:snoremenu|                                                like ":noremenu" but for Select mode
|:xnoremenu|                                                like ":noremenu" but for Visual mode
|:vnoremenu|                                                like ":noremenu" but for Visual+Select mode
|:mapclear|                                 clear all mappings for Normal and Visual mode
|:debuggreedy|                       read debug mode commands from normal input
|:nmenu|                                              add menu for Normal mode
|:nmapclear|                                clear all mappings for Normal mode
|:nmap|                                        like ":map" but for Normal mode
|:nnoremap|                                like ":noremap" but for Normal mode
|:nnoremenu|                              like ":noremenu" but for Normal mode
|:nunmap|                                    like ":unmap" but for Normal mode
|:nunmenu|                                         remove menu for Normal mode
|:normal|                                                  execute Normal mode commands
|:viusage|                                             overview of Normal mode commands
|:sleep|                                                        do nothing for a few seconds
'maxcombine'                                               maximum nr of combining characters displayed
'undoreload'                                                   max nr of lines to save for undo on a buffer reload
'window'                                                           nr of lines to scroll for CTRL-F and CTRL-B
'sidescrolloff'                                               min. nr. of columns to left and right of cursor
'scrolloff'                                                minimum nr. of lines above and below cursor
'report'                                   threshold for reporting nr. of lines changed
'paragraphs'                                                       nroff macros that separate paragraphs
'sections'                                                         nroff macros that separate sections
'numberwidth'                  number of columns used for the line number
|:number|                                    print lines with line number
|:=|                                         print the cursor line number
|:version|                                           print version number and other info
'nrformats'                                                        number formats recognized for CTRL-A command
'number'                                            print the line number in front of each line
'relativenumber'                                show relative line number in front of each line
'undolevels'                                               maximum number of changes that can be undone
'winminwidth'                                              minimal number of columns for any window
'winwidth'                                                 minimal number of columns for current window
'columns'                                                          number of columns in the display
'sidescroll'                                               minimum number of columns to scroll horizontal
'numberwidth'                                                      number of columns used for the line number
'history'                                                          number of command-lines that are remembered
'menuitems'                                                maximum number of items in a menu
'modelines'                                                        number of lines checked for modelines
'foldminlines'                                             minimum number of lines for a fold to be closed
'ttyscroll'                                                maximum number of lines for a scroll
'winminheight'                                             minimum number of lines for any window
'winheight'                                                minimum number of lines for the current window
'lines'                                                            number of lines in the display
'scrolljump'                                               minimum number of lines to scroll
'cmdheight'                                                        number of lines to use for the command-line
'linespace'                                                        number of pixel lines to use between characters
'taglength'                                                        number of significant characters for a tag
'tabstop'                                                          number of spaces that <Tab> in file uses
'softtabstop'                                                      number of spaces that <Tab> uses while editing
'shiftwidth'                                                       number of spaces to use for (auto)indent step
'tabpagemax'                                               maximum number of tab pages for |-p| and "tab all"
|:#|                                                     same as ":number"
'fileformat'                           file format used for file I/O
|:winsize|                                 get or set window size (obsolete)
'textmode'                                                         obsolete, use 'fileformat'
'textauto'                                                         obsolete, use 'fileformats'
'diffexpr'                                      expression used to obtain a diff file
'indentexpr'                                    expression used to obtain the indent of a line
'highlight'                     sets highlighting mode for various occasions
|:filetype|                          switch file type detection on/off
|:visual|                               same as ":edit", but turns off "Ex" mode
|:tearoff|                                                    tear-off a menu
|:diffoff|                                                  switch off diff mode
'titleold'                                                         old title, restored when exiting
|:earlier|                                                   go to older change, undo
|:pop|                                                     jump to older entry in tag stack
|:colder|                                                    go to older error list
|:lolder|                                                    go to older location list
'patchmode'                                               keep the oldest version of a file
|:view|                                           edit a file read-only
|:sview|                           split window and edit file read-only
'confirm'                        ask what to do about unsaved/read-only files
|:tjump|          like ":tselect", but jump directly when there is only one match
'conskey'                   get keys directly from console (MS-DOS only)
'toolbariconsize'             size of the toolbar icons (for GTK 2 only)
'tagstack'                                               push tags onto the tag stack
'foldenable'                              set to display all folds open
|:helpfind|                                              dialog to open a help window
|:help|                                                            open a help window
|:ball|                                                            open a window for each buffer in the buffer list
|:sall|                                                            open a window for each file in argument list
|:all|                                                             open a window for each file in the argument list
|:sball|                                                           open a window for each file in the buffer list
|:unhide|                                                          open a window for each loaded file in the buffer list
|:foldopen|                                                        open folds
|:promptrepl|                                                      open GUI dialog for search/replace
|:promptfind|                                                      open GUI dialog for searching
|:lopen|                                                           open location window
|:open|                                                      start open mode (not implemented)
|:lwindow|                                                         open or close location window
|:cwindow|                                                         open or close quickfix window
|:copen|                                                           open quickfix window
'cedit'                                                key used to open the command-line window
|:options|                                                         open the options-window
'foldopen'                       for which commands a fold will be opened
|:tab|                                         create new tab when opening new window
'winfixheight'                             keep window height when opening/closing windows
'winfixwidth'                               keep window width when opening/closing windows
'osfiletype'                                                       operating system-specific filetype information
'operatorfunc'                      function to be called for |g@| operator
'tildeop'                        tilde command "~" behaves like an operator
|:omenu|                                              add menu for Operator-pending mode
|:omap|                                        like ":map" but for Operator-pending mode
|:onoremap|                                like ":noremap" but for Operator-pending mode
|:onoremenu|                              like ":noremenu" but for Operator-pending mode
|:ounmap|                                    like ":unmap" but for Operator-pending mode
|:omapclear|                               remove all mappings for Operator-pending mode
|:ounmenu|                                         remove menu for Operator-pending mode
|:let|                             assign a value to a variable or option
|:setglobal|                                 show global values of options
|:set|                                                 show or set options
'guioptions'                             GUI: Which components and options are used
'completeopt'                                                      options for Insert mode completion
'diffopt'                                                          options for using diff mode
'sessionoptions'                                                   options for |:mksession|
|:setlocal|                                            show or set options locally
|:options|                                                open the options-window
'cscopetagorder'                        determines ":cstag" search order
'bomb'                                              prepend a Byte Order Mark to the file
'rightleft'                                window is right-to-left oriented
'antialias'                                                    Mac OS X: use smooth, antialiased fonts
|:diffput|                                   remove differences in other buffer
|:version|                                print version number and other info
'langmap'                                alphabetic characters for other language mode
|:tabmove|                                        move tab page to other position
'cursorbind'                  move cursor in window as it moves in other windows
'scrollbind'                                   scroll in window as other windows scroll
|:break|                                                     break out of while loop
'ttimeout'                                                    time out on mappings
'timeout'                                                     time out on mappings and key codes
'ttimeoutlen'                                                 time out time for key codes in milliseconds
'timeoutlen'                                                  time out time in milliseconds
'printoptions'                    controls the format of :hardcopy output
'grepformat'                                   format of 'grepprg' output
'shellpipe'                                          string to put output of ":make" in error file
'printmbfont'                        font names to be used for CJK output of :hardcopy
'shellredir'                                         string to put output of filter in a temp file
'autoread'                           autom. read file when changed outside of Vim
|:wsverb|                                pass the verb to workshop over IPC
'writeany'                      write to file with no need for "!" override
|:exusage|                                                         overview of Ex commands
|:viusage|                                                         overview of Normal mode commands
'backup'                                    keep backup file after overwriting a file
'writebackup'                                 make a backup before overwriting a file
'delcombine'                  delete combining characters on their own
|:tabclose|                                      close current tab page
|:tabedit|                                edit a file in a new tab page
|:tabnew|                                 edit a file in a new tab page
|:tabdo|                               execute command in each tab page
|:tabfind|               find file in 'path', edit it in a new tab page
|:tabnext|                                          go to next tab page
|:tabNext|                                      go to previous tab page
|:tabprevious|                                  go to previous tab page
|:tabfirst|                                       got to first tab page
|:tabrewind|                                      got to first tab page
|:tablast|                                         got to last tab page
'guitablabel'                          GUI: custom label for a tab page
'guitabtooltip'                      GUI: custom tooltip for a tab page
|:tabmove|                                                move tab page to other position
|:tabs|                                               list the tab pages and what they contain
|:tabonly|                                           close all tab pages except the current one
'tabpagemax'                                 maximum number of tab pages for |-p| and "tab all"
'tabline'                        custom format for the console tab pages line
'showtabline'                                   tells when the tab pages line is displayed
'matchpairs'                                                       pairs of characters that "%" can match
'paragraphs'                            nroff macros that separate paragraphs
'matchtime'                    tenths of a second to show matching paren
|:lmake|                    execute external command 'makeprg' and parse error messages
|:make|                     execute external command 'makeprg' and parse error messages
|:cbuffer|                                                         parse error messages and jump to first error
|:lbuffer|                                                         parse locations and jump to first location
|:catch|                                                           part of a :try command
|:finally|                                                         part of a :try command
|:else|                                                            part of an :if command
|:elseif|                                                          part of an :if command
'showcmd'                                                    show (partial) command in status line
|:nbkey|                                                           pass a key to Netbeans
|:wsverb|                                                          pass the verb to workshop over IPC
'pastetoggle'                                key code that causes 'paste' to toggle
'paste'                                                      allow pasting text
'patchexpr'                                     expression used to patch a file
|:diffpatch|                                               apply a patch and show differences
'helpfile'                                                    full path name of the main help file
'cscopepathcomp'                        how many components of the path to show
|:sfind|                    split current window and edit file in 'path'
|:find|                                              find file in 'path' and edit it
|:tabfind|                                           find file in 'path', edit it in a new tab page
'isfname'                    characters included in file names and pathnames
'incsearch'                    highlight match while typing search pattern
'hlsearch'                      highlight matches with last search pattern
'imsearch'                    use :lmap or IM when typing a search pattern
'smartcase'                                    no ignore case when pattern has uppercase
|:lvimgrep|                                             search for pattern in files
|:vimgrep|                                              search for pattern in files
'maxmempattern'                 maximum memory (in Kbyte) used for pattern search
'define'                                                           pattern to be used to find a macro definition
'include'                                                          pattern to be used to find an include file
'spellcapcheck'                                                    pattern to locate end of a sentence
'formatlistpat'                                                    pattern used to recognize a list header
'showfulltag'                                        show full tag pattern when completing tag
'magic'                       changes special characters in search patterns
'ignorecase'                                 ignore case in search patterns
'backupskip'                  no backup for files that match these patterns
'wildignore'                                  files matching these patterns are not completed
'comments'                                                         patterns that can start a comment line
'more'                                                             pause listings when the whole screen is filled
|:omenu|                                     add menu for Operator-pending mode
|:omap|                               like ":map" but for Operator-pending mode
|:onoremap|                       like ":noremap" but for Operator-pending mode
|:onoremenu|                     like ":noremenu" but for Operator-pending mode
|:ounmap|                           like ":unmap" but for Operator-pending mode
|:omapclear|                      remove all mappings for Operator-pending mode
|:ounmenu|                                remove menu for Operator-pending mode
'titlelen'                                                         percentage of 'columns' used for window title
'joinspaces'                                    two spaces after a period with a join command
|:perl|                                                    execute Perl command
|:perldo|                                                  execute Perl command for each line
'hkmapp'                                                           phonetic Hebrew keyboard mapping
'linespace'                                              number of pixel lines to use between characters
'guiheadroom'                                                 GUI: pixels room for window decorations
'loadplugins'                                                 load plugin scripts when starting up
'mouseshape'                                    shape of the mouse pointer in different modes
'mousehide'                                             hide mouse pointer while typing
'mzquantum'                                   the interval between polls for MzScheme threads
'balloondelay'                    delay in mS before a balloon may pop up
|:ppop|                                                          ":pop" in preview window
|:popup|                                                           popup a menu by name
'pumheight'                                  maximum height of the popup menu
|:winpos|                                        get or set window position
|:tabmove|                                  move tab page to other position
'compatible'                       behave Vi-compatible as much as possible
'modifiable'                           changes to the text are not possible
'printexpr'                               expression used to print PostScript for :hardcopy
'helplang'                                                         preferred help languages
'bomb'                                                             prepend a Byte Order Mark to the file
'preserveindent'                                                   preserve the indent structure when reindenting
|:ppop|                                                  ":pop" in preview window
|:pclose|                                                    close preview window
|:pedit|                                          edit file in the preview window
'previewheight'                                      height of the preview window
'previewwindow'                                     identifies the preview window
|:psearch|                        like ":ijump" but shows match in preview window
|:ptag|                                                show tag in preview window
|:ptjump|                                 |:tjump| and show tag in preview window
|:ptlast|                                              |:tlast| in preview window
|:ptNext|                                              |:tNext| in preview window
|:ptnext|                                              |:tnext| in preview window
|:ptprevious|                                      |:tprevious| in preview window
|:ptfirst|                                           |:trewind| in preview window
|:ptrewind|                                          |:trewind| in preview window
|:ptselect|                             |:tselect| and show tag in preview window
|:@@|                                                   repeat the previous ":@"
|:endfor|                                                      end previous :for
|:endif|                                                       end previous :if
|:endtry|                                                      end previous :try
|:endwhile|                                                    end previous :while
|:bNext|                                                     go to previous buffer in the buffer list
|:bprevious|                                                 go to previous buffer in the buffer list
|:lNext|                                                     go to previous entry in location list
|:cNext|                                                     go to previous error
|:cprevious|                                                 go to previous error
|:lNfile|                                      go to last entry in previous file
|:cNfile|                                      go to last error in previous file
|:cpfile|                                      go to last error in previous file
|:lpfile|                                   go to last location in previous file
|:previous|                                                  go to previous file in argument list
|:sNext|                                    split window and go to previous file in argument list
|:wNext|                                 write to a file and go to previous file in argument list
|:wprevious|                             write to a file and go to previous file in argument list
|:Next|                                                      go to previous file in the argument list
|:sprevious|                                split window and go to previous file in the argument list
|:sbNext|                                   split window and go to previous file in the buffer list
|:sbprevious|                               split window and go to previous file in the buffer list
'autoindent'                         take indent for new line from previous line
|:lprevious|                                                 go to previous location
|:tNext|                                                   jump to previous matching tag
|:tprevious|                                               jump to previous matching tag
|:tabNext|                                                   go to previous tab page
|:tabprevious|                                               go to previous tab page
|:undojoin|                                  join next change with previous undo block
|:messages|                                                   view previously displayed messages
|:history|                                                         print a history list
|:ascii|                                                           print ascii value of character under the cursor
|:pwd|                                                             print current directory
|:Print|                                                           print lines
|:list|                                                            print lines
|:print|                                                           print lines
|:number|                                                          print lines with line number
'printexpr'                                     expression used to print PostScript for :hardcopy
|:z|                                                               print some lines
|:args|                                                            print the argument list
|:changes|                                                         print the change list
|:=|                                                               print the cursor line number
|:intro|                                                           print the introductory message
|:jumps|                                                           print the jump list
'number'                                                           print the line number in front of each line
|:version|                                                         print version number and other info
'isprint'                                                          printable characters
|:hardcopy|                                       send text to the printer
'printdevice'                                          name of the printer to be used for :hardcopy
'printencoding'                            encoding to be used for printing
'includeexpr'                                   expression used to process an include line
|:mkspell|                                                         produce .spl spell file
|:profdel|                                                    stop profiling a function or script
|:profile|                                                         profiling functions and scripts
'cindent'                                                     do C program indenting
'grepprg'                                                          program to use for ":grep"
'equalprg'                                                external program to use for "=" command
'makeprg'                                                          program to use for the ":make" command
'keywordprg'                                                       program to use for the "K" command
'formatprg'                                       name of external program used with "gq" command
'smartindent'                            smart autoindenting for C programs
|:confirm|                                                         prompt user when confirmation required
'guipty'                                         GUI: try to use a pseudo-tty for ":!" commands
'tagstack'                                                         push tags onto the tag stack
|:echomsg|                                          same as :echo, put message in history
'shellpipe'                                              string to put output of ":make" in error file
'shellredir'                                             string to put output of filter in a temp file
'splitright'                                         new window is put right of the current one
|:python3|                                                same as :py3
|:py3|                                                     execute Python 3 command
|:py3file|                                                 execute Python 3 script file
|:python|                                                  execute Python command
|:pyfile|                                                  execute Python script file
'tabpagemax'                     maximum number of tab pages for |-p| and "tab all"
|:caddfile|                           add error message to current quickfix list
'errorfile'                          name of the errorfile for the QuickFix mode
|:cclose|                                                    close quickfix window
|:cwindow|                                           open or close quickfix window
|:copen|                                                      open quickfix window
'cscopequickfix'                                               use quickfix window for cscope results
|:quit|                                                            quit current window (when one window quit Vim)
|:finish|                                                          quit sourcing a Vim script
|:quitall|                                                         quit Vim
|:qall|                                                            quit Vim
|:wqall|                             write all changed buffers and quit Vim
|:cquit|                                                           quit Vim with an error code
|:quit|                       quit current window (when one window quit Vim)
|:xit|                                 write if buffer changed and quit window or Vim
|:wq|                                          write to a file and quit window or Vim
'shellquote'                                                       quote character(s) for around shell command
'exrc'                                                             read .vimrc and .exrc in the current directory
|:debuggreedy|                                                     read debug mode commands from normal input
|:cexpr|                                                           read errors from expr and jump to first
|:read|                                                            read file into the text
'autoread'                                                  autom. read file when changed outside of Vim
|:cgetfile|                                                        read file with error messages
|:cfile|                                                           read file with error messages and jump to first
|:lgetfile|                                                        read file with locations
|:lfile|                                                           read file with locations and jump to first
|:rviminfo|                                                        read from viminfo file
|:lexpr|                                                           read locations from expr and jump to first
|:rundo|                                                           read undo information from a file
|:source|                                                          read Vim or Ex commands from a file
|:view|                                                edit a file read-only
|:sview|                                split window and edit file read-only
'confirm'                             ask what to do about unsaved/read-only files
'binary'                                                           read/write/edit file in binary mode
'secure'                                           secure mode for reading .vimrc in current dir
'opendevice'                                                 allow reading/writing devices on MS-Windows
|:bwipeout|                                                        really delete a buffer
'formatlistpat'                                    pattern used to recognize a list header
'esckeys'                                                          recognize function keys in Insert mode
'modeline'                                                         recognize modelines at start or end of file
'nrformats'                                         number formats recognized for CTRL-A command
|:recover|                                                         recover a file from a swap file
'maxmapdepth'                                              maximum recursive depth for mapping
'maxfuncdepth'                                             maximum recursive depth for user functions
'remap'                                     allow mappings to work recursively
|:redir|                                                           redirect messages to a file or register
'shellxquote'                       like 'shellquote', but include redirection
|:later|                                       go to newer change, redo
|:redo|                                                            redo one undone change
|:redraw|                                                  force a redraw of the display
|:redrawstatus|                                            force a redraw of the status line(s)
'lazyredraw'                                                 don't redraw while executing macros
'shortmess'                                         list of flags, reduce length of messages
|:star|                                      execute contents of a register
|:@|                                         execute contents of a register
|:redir|                            redirect messages to a file or register
'clipboard'                       use the clipboard as the unnamed register
|:yank|                                          yank lines into a register
|:put|                                          insert contents of register in the text
|:display|                                                 display registers
|:registers|                               display the contents of registers
'preserveindent'                preserve the indent structure when reindenting
'tagrelative'                           file names in tag file are relative
'relativenumber'                                              show relative line number in front of each line
'undoreload'          max nr of lines to save for undo on a buffer reload
|:noremap|                        enter a mapping that will not be remapped
|:noremenu|                          enter a menu that will not be remapped
|:anoremenu|       enter a new menu for all modes that will not be remapped
|:noreabbrev|               enter an abbreviation that will not be remapped
'history'                         number of command-lines that are remembered
|:bdelete|                                                         remove a buffer from the buffer list
|:unabbreviate|                                                    remove abbreviation
|:abclear|                                                         remove all abbreviations
|:omapclear|                                                       remove all mappings for Operator-pending mode
|:smapclear|                                                       remove all mappings for Select mode
|:xmapclear|                                                       remove all mappings for Visual mode
|:vmapclear|                                                       remove all mappings for Visual+Select mode
|:diffget|                                                         remove differences in current buffer
|:diffput|                                                         remove differences in other buffer
|:spellundo|                                                       remove good or bad word
|:unmap|                                                           remove mapping
|:unmenu|                                                          remove menu
|:aunmenu|                                                         remove menu for all modes
|:cunmenu|                                                         remove menu for Command-line mode
|:iunmenu|                                                         remove menu for Insert mode
|:nunmenu|                                                         remove menu for Normal mode
|:ounmenu|                                                         remove menu for Operator-pending mode
|:sunmenu|                                                         remove menu for Select mode
|:xunmenu|                                                         remove menu for Visual mode
|:vunmenu|                                                         remove menu for Visual+Select mode
|:tunmenu|                                                         remove menu tooltip
'backupcopy'                          make backup as a copy, don't rename the file
|:!!|                                                              repeat last ":!" command
|:&|                                                               repeat last ":substitute"
|:~|                                                               repeat last ":substitute"
|:@@|                                                              repeat the previous ":@"
|:promptrepl|                           open GUI dialog for search/replace
|:change|                                                          replace a line or series of lines
|:spellrepall|                                                     replace all bad words like last |z=|
|:startreplace|                                              start Replace mode
|:startgreplace|                                     start Virtual Replace mode
|:substitute|                                             find and replace text
'report'                                             threshold for reporting nr. of lines changed
|:sniff|                                                      send request to sniff
|:confirm|                           prompt user when confirmation required
'restorescreen'                                             Win32: restore screen when exiting
'titleold'                                              old title, restored when exiting
|:echo|                                                 echoes the result of expressions
|:execute|                                                 execute result of expressions
'cscopequickfix'                    use quickfix window for cscope results
|:return|                                                          return from a user function
|:botright|              make split window appear at bottom or far right
|:>|                                  shift lines one 'shiftwidth' right
|:right|                                                           right align text
'sidescrolloff'                    min. nr. of columns to left and right of cursor
'splitright'                                     new window is put right of the current one
|:belowright|                             make split window appear right or below
|:rightbelow|                             make split window appear right or below
'wrapmargin'                                        chars from the right where wrapping starts
'rightleftcmd'                    commands for which editing works right-to-left
'rightleft'                                              window is right-to-left oriented
'errorbells'                                                       ring the bell for error messages
'guiheadroom'                                          GUI: pixels room for window decorations
'shiftround'                                                       round indent to multiple of shiftwidth
|:ruby|                                                    execute Ruby command
|:rubydo|                                                  execute Ruby command for each line
|:rubyfile|                                                execute Ruby script file
'rulerformat'                                custom format for the ruler
|:grep|                                                            run 'grepprg' and jump to first match
|:lgrep|                                                           run 'grepprg' and jump to first match
|:debug|                                                           run a command in debugging mode
|:unsilent|                                                        run a command not silently
|:silent|                                                          run a command silently
'runtimepath'                         list of directories used for runtime files
|:runtime|                                  source vim scripts in 'runtimepath'
|:redrawstatus|                  force a redraw of the status line(s)
|:undo|                                           undo last change(s)
'shellquote'                                       quote character(s) for around shell command
'guifont'                                                GUI: Name(s) of font(s) to be used
'guifont'                                     GUI: Name(s) of font(s) to be used
'spelllang'                                               language(s) to do spell checking for
'spellsuggest'                                              method(s) used to suggest spelling corrections
|:t|                                                               same as ":copy"
|:ex|                                                              same as ":edit"
|:visual|                                                          same as ":edit", but turns off "Ex" mode
|:#|                                                               same as ":number"
|:suspend|                                                         same as ":stop"
|:sunhide|                                                         same as ":unhide"
|:xall|                                                            same as ":wqall"
|:exit|                                                            same as ":xit"
|:echon|                                                           same as :echo, but without <EOL>
|:echomsg|                                                         same as :echo, put message in history
|:python3|                                                         same as :py3
'equalalways'                   windows are automatically made the same size
|:sandbox|                                execute a command in the sandbox
|:saveas|                                                          save file under another name.
'viewoptions'                                    specifies what to save for :mkview
'undoreload'                                    max nr of lines to save for undo on a buffer reload
'undofile'                                                         save undo information in a file
|:colorscheme|                               load a specific color scheme
'cursorcolumn'                                       highlight the screen column of the cursor
'more'                               pause listings when the whole screen is filled
'cursorline'                                         highlight the screen line of the cursor
|:mode|                                         show or change the screen mode
'restorescreen'                                     Win32: restore screen when exiting
|:scriptencoding|                     encoding used in sourced Vim script
|:finish|                                      quit sourcing a Vim script
|:profdel|                            stop profiling a function or script
|:mzfile|                                         execute MzScheme script file
|:py3file|                                        execute Python 3 script file
|:pyfile|                                           execute Python script file
|:rubyfile|                                           execute Ruby script file
|:tclfile|                                             execute Tcl script file
|:luafile|                                           execute |Lua| script file
|:scriptnames|                       list names of all sourced Vim scripts
|:profile|                                 profiling functions and scripts
|:runtime|                                              source vim scripts in 'runtimepath'
'loadplugins'                                          load plugin scripts when starting up
'ttyscroll'                          maximum number of lines for a scroll
'scrolljump'                            minimum number of lines to scroll
'scrollbind'                     scroll in window as other windows scroll
|:syncbind|                                                   sync scroll binding
'window'                                            nr of lines to scroll for CTRL-F and CTRL-B
'sidescroll'                          minimum number of columns to scroll horizontal
'scrollbind'                                                       scroll in window as other windows scroll
'scroll'                                                  lines to scroll with CTRL-U and CTRL-D
'scrollopt'                                                   how 'scrollbind' should behave
'maxmempattern'         maximum memory (in Kbyte) used for pattern search
|:lvimgrep|                                                        search for pattern in files
|:vimgrep|                                                         search for pattern in files
'cscopetagorder'                               determines ":cstag" search order
'incsearch'                           highlight match while typing search pattern
'hlsearch'                             highlight matches with last search pattern
'imsearch'                           use :lmap or IM when typing a search pattern
'magic'                              changes special characters in search patterns
'ignorecase'                                        ignore case in search patterns
|:promptrepl|                                  open GUI dialog for search/replace
'cdpath'                                       list of directories searched with ":cd"
'path'                                         list of directories searched with "gf" et.al.
|:helpgrep|                                       like ":grep" but searches help files
'wrapscan'                                                         searches wrap around the end of the file
|:promptfind|                                  open GUI dialog for searching
'suffixesadd'                                  suffixes added when searching for a file
'tagbsearch'                                            use binary searching in tags files
'arabic'                                   for Arabic as a default second language
'altkeymap'                                            for default second language (Farsi/Hebrew)
'matchtime'                                            tenths of a second to show matching paren
|:sleep|                                      do nothing for a few seconds
'sections'                              nroff macros that separate sections
'secure'                                                           secure mode for reading .vimrc in current dir
'debug'                                            set to "msg" to see all error messages
|:smenu|                                              add menu for Select mode
|:vmenu|                                       add menu for Visual+Select mode
|:smap|                                        like ":map" but for Select mode
|:vmap|                                 like ":map" but for Visual+Select mode
|:snoremap|                                like ":noremap" but for Select mode
|:vnoremap|                         like ":noremap" but for Visual+Select mode
|:snoremenu|                              like ":noremenu" but for Select mode
|:vnoremenu|                       like ":noremenu" but for Visual+Select mode
|:sunmap|                                    like ":unmap" but for Select mode
|:vunmap|                             like ":unmap" but for Visual+Select mode
|:smapclear|                               remove all mappings for Select mode
|:vmapclear|                        remove all mappings for Visual+Select mode
|:sunmenu|                                         remove menu for Select mode
|:vunmenu|                                  remove menu for Visual+Select mode
'selectmode'                                           when to use Select mode instead of Visual mode
|:tselect|                                  list matching tags and select one
|:augroup|                                                         select the autocommand group to use
|:behave|                                            set mouse and selection behavior
|:browse|                                                 use file selection dialog
'selection'                                           what type of selection to use
'keymodel'                                enable starting/stopping selection with keys
|:sniff|                                                           send request to sniff
|:hardcopy|                                                        send text to the printer
'spellcapcheck'                         pattern to locate end of a sentence
'paragraphs'                                     nroff macros that separate paragraphs
'sections'                                       nroff macros that separate sections
|:change|                                        replace a line or series of lines
|:nbclose|                              close the current Netbeans session
|:nbstart|                                    start a new Netbeans session
|:mksession|                                                 write session info to a file
|:verbose|                          execute command with 'verbose' set
'cinoptions'                 how to do indenting when 'cindent' is set
'cinkeys'               keys that trigger indent when 'cindent' is set
|:setfiletype|                                                     set 'filetype', unless it was set already
|:k|                                                               set a mark
|:mark|                                                            set a mark
|:setfiletype|                       set 'filetype', unless it was set already
|:echohl|                                                          set highlighting for echo commands
|:fixdel|                                                          set key code of <Del>
|:behave|                                                          set mouse and selection behavior
|:ownsyntax|                                                       set new local syntax highlight for this window
|:set|                                                     show or set options
|:setlocal|                                                show or set options locally
|:file|                                                    show or set the current file name
|:language|                                                        set the language (locale)
'icon'                                                     let Vim set the text of the window icon
'title'                                                    let Vim set the title of the window
'debug'                                                            set to "msg" to see all error messages
'printmbcharset'                                     CJK character set to be used for :hardcopy
'foldenable'                                                       set to display all folds open
|:winpos|                                                   get or set window position
|:winsize|                                                  get or set window size (obsolete)
'switchbuf'                                                        sets behavior when switching to another buffer
'highlight'                                                        sets highlighting mode for various occasions
|:compiler|                                                     do settings for a specific compiler
'guicursor'                                                   GUI: settings for cursor shape and blinking
|:mkexrc|                               write current mappings and settings to a file
|:mkvimrc|                              write current mappings and settings to a file
'guicursor'                               GUI: settings for cursor shape and blinking
'mouseshape'                                                       shape of the mouse pointer in different modes
'arabicshape'                                                   do shaping for Arabic characters
'shelltype'                         Amiga: influences how to use a shell
|:shell|                                               escape to a shell
|:stop|                          suspend the editor or escape to a shell
'shellquote'                         quote character(s) for around shell command
'warn'                                                    warn for shell command when buffer was changed
'shelltemp'                         whether to use a temp file for shell commands
'shellslash'                                 use forward slash for shell file names
'shellcmdflag'                                             flag to shell to execute one command
'shell'                                                    name of shell to use for external commands
'shellxquote'                                                like 'shellquote', but include redirection
|:<|                                                               shift lines one 'shiftwidth' left
|:>|                                                               shift lines one 'shiftwidth' right
'shiftround'                           round indent to multiple of shiftwidth
|:<|                                              shift lines one 'shiftwidth' left
|:>|                                              shift lines one 'shiftwidth' right
'smarttab'                                                    use 'shiftwidth' when inserting <Tab>
'terse'                                                            shorten some messages
'scrollopt'                                       how 'scrollbind' should behave
'cscopepathcomp'                how many components of the path to show
'showcmd'                                                          show (partial) command in status line
'list'                                                             show <Tab> and <EOL>
|:autocmd|                                                enter or show autocommands
'showmode'                               message on status line to show current mode
'ruler'                                                            show cursor line and column in the status line
|:diffpatch|                                     apply a patch and show differences
|:diffsplit|                                                       show differences with another file
'showfulltag'                                                      show full tag pattern when completing tag
|:setglobal|                                                       show global values of options
'balloonexpr'                                        expression to show in balloon
'toolbar'                                      GUI: which items to show in the toolbar
|:spellinfo|                                                       show info about loaded spell files
|:echoerr|                                             like :echo, show like an error and use history
'matchtime'                                  tenths of a second to show matching paren
|:mode|                                                            show or change the screen mode
|:map|                                                             show or enter a mapping
|:digraphs|                                                        show or enter digraphs
|:set|                                                             show or set options
|:setlocal|                                                        show or set options locally
|:file|                                                            show or set the current file name
'relativenumber'                                                   show relative line number in front of each line
|:ptag|                                                            show tag in preview window
|:ptjump|                                             |:tjump| and show tag in preview window
|:ptselect|                                         |:tselect| and show tag in preview window
|:tags|                                                            show the contents of the tag stack
|:swapname|                                                        show the name of the current swap file
'conceallevel'                         whether concealable text is shown or hidden
|:psearch|                                       like ":ijump" but shows match in preview window
'buflisted'                                     whether the buffer shows up in the buffer list
'cinwords'                                            words where 'si' and 'cin' add an indent
'taglength'                                              number of significant characters for a tag
|:sign|                                                 manipulate signs
|:unsilent|                                      run a command not silently
|:silent|                                            run a command silently
|:simalt|                                               Win32 GUI: simulate Windows ALT key
|:retab|                                                change tab size
'equalalways'              windows are automatically made the same size
|:winsize|                                       get or set window size (obsolete)
'toolbariconsize'                                                  size of the toolbar icons (for GTK 2 only)
'shellslash'                                           use forward slash for shell file names
'smartindent'                                                      smart autoindenting for C programs
'antialias'                                          Mac OS X: use smooth, antialiased fonts
|:sniff|                                           send request to sniff
|:z|                                                         print some lines
'terse'                                                    shorten some messages
|:sort|                                                            sort lines
|:runtime|                                                         source vim scripts in 'runtimepath'
|:scriptencoding|                                 encoding used in sourced Vim script
|:scriptnames|                                   list names of all sourced Vim scripts
|:finish|                                                     quit sourcing a Vim script
'joinspaces'                                                   two spaces after a period with a join command
'tabstop'                                                number of spaces that <Tab> in file uses
'softtabstop'                                            number of spaces that <Tab> uses while editing
'shiftwidth'                                             number of spaces to use for (auto)indent step
'expandtab'                                                    use spaces when <Tab> is inserted
'magic'                                                    changes special characters in search patterns
'fillchars'                       characters to use for displaying special items
'buftype'                                                          special type of buffer
|:bunload|                                                unload a specific buffer
|:buffer|                                                    go to specific buffer in the buffer list
|:colorscheme|                                              load a specific color scheme
|:compiler|                                      do settings for a specific compiler
'omnifunc'                                   function for filetype-specific completion
|:cc|                                                        go to specific error
|:sargument|                                split window and go to specific file in argument list
|:argument|                                                  go to specific file in the argument list
|:sbuffer|                                  split window and go to specific file in the buffer list
'osfiletype'                                      operating system-specific filetype information
|:ll|                                                        go to specific location
|:cfirst|                                                go to the specified error, default first one
|:crewind|                                               go to the specified error, default first one
|:clast|                                                 go to the specified error, default last one
'whichwrap'                                                  allow specified keys to cross line boundaries
|:lfirst|                                                go to the specified location, default first one
|:lrewind|                                               go to the specified location, default first one
|:llast|                                                 go to the specified location, default last one
'casemap'                                                          specifies how case of letters is changed
'wildoptions'                                                      specifies how command line completion is done
'viewoptions'                                                      specifies what to save for :mkview
|:highlight|                                                       specify highlighting methods
'complete'                                                         specify how Insert mode completion works
'spell'                                                     enable spell checking
'spelllang'                                      language(s) to do spell checking for
|:mkspell|                                            produce .spl spell file
|:spellinfo|                                show info about loaded spell files
|:spellgood|                                     add good word for spelling
'spellsuggest'                           method(s) used to suggest spelling corrections
|:spellwrong|                                                  add spelling mistake
|:mkspell|                                                produce .spl spell file
|:vnew|                      create a new empty window, vertically split
|:split|                                                           split current window
|:sfind|                                                           split current window and edit file in 'path'
|:vsplit|                                                          split current window vertically
'splitbelow'                                       new window from split is below the current one
|:vertical|                                 make following command split vertically
|:stjump|                                          do ":tjump" and split window
|:stselect|                                      do ":tselect" and split window
|:sview|                                                           split window and edit file read-only
|:scscope|                                                         split window and execute cscope command
|:spelldump|                                                       split window and fill with all correct words
|:sfirst|                                                          split window and go to first file in the argument list
|:srewind|                                                         split window and go to first file in the argument list
|:sbfirst|                                                         split window and go to first file in the buffer list
|:sbrewind|                                                        split window and go to first file in the buffer list
|:sblast|                                                          split window and go to last file in buffer list
|:slast|                                                           split window and go to last file in the argument list
|:sbmodified|                                                      split window and go to modified file in the buffer list
|:snext|                                                           split window and go to next file in the argument list
|:sbnext|                                                          split window and go to next file in the buffer list
|:sNext|                                                           split window and go to previous file in argument list
|:sprevious|                                                       split window and go to previous file in the argument list
|:sbNext|                                                          split window and go to previous file in the buffer list
|:sbprevious|                                                      split window and go to previous file in the buffer list
|:sargument|                                                       split window and go to specific file in argument list
|:sbuffer|                                                         split window and go to specific file in the buffer list
|:dsplit|                                                          split window and jump to #define
|:stag|                                                            split window and jump to a tag
|:isplit|                                                          split window and jump to definition of identifier
|:botright|                                                   make split window appear at bottom or far right
|:topleft|                                                    make split window appear at top or far left
|:aboveleft|                                                  make split window appear left or above
|:leftabove|                                                  make split window appear left or above
|:belowright|                                                 make split window appear right or below
|:rightbelow|                                                 make split window appear right or below
|:pop|                                  jump to older entry in tag stack
'tagstack'                                  push tags onto the tag stack
|:tags|                               show the contents of the tag stack
'comments'                                       patterns that can start a comment line
|:nbstart|                                                         start a new Netbeans session
'browsedir'                                     which directory to start browsing in
|:startinsert|                                                     start Insert mode
'backspace'                                 how backspace works at start of line
'showbreak'                                   string to use at the start of wrapped lines
|:open|                                                            start open mode (not implemented)
'modeline'                                  recognize modelines at start or end of file
|:startreplace|                                                    start Replace mode
'insertmode'                                                       start the edit of a file in Insert mode
|:gui|                                                             start the GUI
|:gvim|                                                            start the GUI
|:startgreplace|                                                   start Virtual Replace mode
'imcmdline'                                            use IM when starting to edit a command line
'foldlevelstart'                                  'foldlevel' when starting to edit a file
'loadplugins'                             load plugin scripts when starting up
'keymodel'                                                  enable starting/stopping selection with keys
'wrapmargin'                   chars from the right where wrapping starts
'viminfo'                                   use .viminfo file upon startup and exiting
'statusline'                                 custom format for the status line
'showcmd'                                show (partial) command in status line
'ruler'                         show cursor line and column in the status line
'showmode'                                              message on status line to show current mode
|:redrawstatus|                              force a redraw of the status line(s)
'laststatus'                            tells when last window has status lines
'shiftwidth'              number of spaces to use for (auto)indent step
|:stopinsert|                                                      stop Insert mode
|:profdel|                                                         stop profiling a function or script
|:suspend|                                               same as ":stop"
'keymodel'                                         enable starting/stopping selection with keys
'viewdir'                                       directory where to store files with :mkview
'undodir'                                                 where to store undo files
'spellfile'                              files where |zg| and |zw| store words
'quoteescape'                          escape characters used in a string
'shellpipe'                                                        string to put output of ":make" in error file
'shellredir'                                                       string to put output of filter in a temp file
'showbreak'                                                        string to use at the start of wrapped lines
'iconstring'                                                       string to use for the Vim icon text
'titlestring'                                                      string to use for the Vim window title
'copyindent'                 make 'autoindent' use existing indent structure
'preserveindent'                               preserve the indent structure when reindenting
|:smagic|                                                         :substitute with 'magic'
|:snomagic|                                                       :substitute with 'nomagic'
|:&|                                                 repeat last ":substitute"
|:~|                                                 repeat last ":substitute"
'edcompatible'                                   toggle flags of ":substitute" command
'gdefault'                                                   the ":substitute" flag 'g' is default on
'suffixesadd'                                                      suffixes added when searching for a file
'suffixes'                                                         suffixes that are ignored with multiple match
'spellsuggest'                                   method(s) used to suggest spelling corrections
|:nohlsearch|                                                      suspend 'hlsearch' highlighting
|:stop|                                                            suspend the editor or escape to a shell
'updatecount'                     after this many characters flush swap file
'updatetime'                    after this many milliseconds flush swap file
'swapsync'                                         how to sync the swap file
'directory'                        list of directory names for the swap file
|:recover|                                   recover a file from a swap file
|:swapname|                           show the name of the current swap file
|:preserve|                                      write all text to swap file
'swapfile'                                        whether to use a swapfile for a buffer
|:filetype|                                                        switch file type detection on/off
|:diffoff|                                                         switch off diff mode
'ballooneval'                                                      switch on balloon evaluation
'switchbuf'                                     sets behavior when switching to another buffer
|:syncbind|                                                        sync scroll binding
'swapsync'                                                  how to sync the swap file
|:ownsyntax|                                         set new local syntax highlight for this window
|:syntax|                                                          syntax highlighting
'synmaxcol'                                 maximum column to find syntax items
'syntax'                                                           syntax to be loaded for current buffer
'winaltkeys'                                      when the windows system handles ALT keys
'osfiletype'                                             operating system-specific filetype information
'lazyredraw'                                                   don't redraw while executing macros
'backupcopy'                            make backup as a copy, don't rename the file
|:noautocmd|                                 following command don't trigger autocommands
'hidden'                                                       don't unload buffer when it is |abandon|ed
'tabpagemax'             maximum number of tab pages for |-p| and "tab all"
|:tabclose|                                          close current tab page
|:tabedit|                                    edit a file in a new tab page
|:tabnew|                                     edit a file in a new tab page
|:tabdo|                                   execute command in each tab page
|:tabfind|                   find file in 'path', edit it in a new tab page
|:tabnext|                                              go to next tab page
|:tabNext|                                          go to previous tab page
|:tabprevious|                                      go to previous tab page
|:tabfirst|                                           got to first tab page
|:tabrewind|                                          got to first tab page
|:tablast|                                             got to last tab page
'guitablabel'                              GUI: custom label for a tab page
'guitabtooltip'                          GUI: custom tooltip for a tab page
|:tabmove|                                                    move tab page to other position
|:tabs|                                                   list the tab pages and what they contain
|:tabonly|                                               close all tab pages except the current one
'tabpagemax'                                     maximum number of tab pages for |-p| and "tab all"
'tabline'                            custom format for the console tab pages line
'showtabline'                                       tells when the tab pages line is displayed
|:retab|                                                    change tab size
|:tab|                                                  create new tab when opening new window
'smarttab'                        use 'shiftwidth' when inserting <Tab>
'list'                                                       show <Tab> and <EOL>
'tabstop'                                   number of spaces that <Tab> in file uses
'expandtab'                                       use spaces when <Tab> is inserted
'softtabstop'                               number of spaces that <Tab> uses while editing
|:tfirst|                                   jump to first matching tag
|:trewind|                                  jump to first matching tag
|:tlast|                                     jump to last matching tag
|:tnext|                                     jump to next matching tag
|:tNext|                                 jump to previous matching tag
|:tprevious|                             jump to previous matching tag
|:tag|                                                     jump to tag
'taglength'                 number of significant characters for a tag
'showfulltag'                show full tag pattern when completing tag
|:stag|                                 split window and jump to a tag
|:cstag|                                   use cscope to jump to a tag
|:ltag|                                                    jump to tag and add matching tags to the location list
'tags'                              list of file names used by the tag command
'cscopetag'                                         use cscope for tag commands
'tagrelative'                                        file names in tag file are relative
|:ptag|                                                       show tag in preview window
|:ptjump|                                        |:tjump| and show tag in preview window
|:ptselect|                                    |:tselect| and show tag in preview window
'showfulltag'                                            show full tag pattern when completing tag
|:pop|                                      jump to older entry in tag stack
'tagstack'                                      push tags onto the tag stack
|:tags|                                   show the contents of the tag stack
|:tselect|                                           list matching tags and select one
'tagbsearch'                               use binary searching in tags files
|:helptags|                                          generate help tags for a directory
'tagstack'                                                    push tags onto the tag stack
|:ltag|                               jump to tag and add matching tags to the location list
'autoindent'                                                       take indent for new line from previous line
'termbidi'                                                terminal takes care of bi-directionality
|:tcl|                                                     execute Tcl command
|:tcldo|                                                   execute Tcl command for each line
|:tclfile|                                                 execute Tcl script file
|:tearoff|                                                         tear-off a menu
'laststatus'                                                       tells when last window has status lines
'showtabline'                                                      tells when the tab pages line is displayed
'shellredir'                   string to put output of filter in a temp file
'shelltemp'                                       whether to use a temp file for shell commands
'commentstring'                                                    template for comments; used for fold marker
'matchtime'                                                        tenths of a second to show matching paren
'ttytype'                                               alias for 'term'
'ttybuiltin'                  use built-in termcap before external termcap
'ttybuiltin'                                          use built-in termcap before external termcap
'termencoding'                      character encoding used by the terminal
'term'                                                 name of the terminal
'ttyfast'                                         indicates a fast terminal connection
'termbidi'                                                         terminal takes care of bi-directionality
'weirdinvert'                                                  for terminals that have weird inversion method
'paste'                                              allow pasting text
|:append|                                                   append text
'fileencoding'                        file encoding for multi-byte text
|:substitute|                                     find and replace text
|:put|                          insert contents of register in the text
|:insert|                                                   insert text
'display'                         list of flags for how to display text
|:read|                                         read file into the text
|:right|                                               right align text
'iconstring'                        string to use for the Vim icon text
'modifiable'                                        changes to the text are not possible
'macatsui'                                      Mac GUI: use ATSUI text drawing
'concealcursor'                                whether concealable text is hidden in cursor line
'conceallevel'                                 whether concealable text is shown or hidden
'icon'                                             let Vim set the text of the window icon
'textwidth'                                       maximum width of text that is being inserted
|:preserve|                                              write all text to swap file
|:hardcopy|                                                   send text to the printer
'foldlevel'                        close folds with a level higher than this
'delcombine'                        delete combining characters on their own
|:tjump|                   like ":tselect", but jump directly when there is only one match
'thesaurus'                                                list of thesaurus files for keyword completion
'backupskip'                        no backup for files that match these patterns
'wildignore'                                        files matching these patterns are not completed
|:keepmarks|                   following command keeps marks where they are
|:lockmarks|                   following command keeps marks where they are
|:tabs|                                list the tab pages and what they contain
'foldlevel'                   close folds with a level higher than this
'updatecount'                                                after this many characters flush swap file
'updatetime'                                                 after this many milliseconds flush swap file
'writedelay'                                                 delay this many msec for each char (for debug)
|:ownsyntax|                    set new local syntax highlight for this window
'mzquantum'                the interval between polls for MzScheme threads
'report'                                                           threshold for reporting nr. of lines changed
|:throw|                                                           throw an exception
'tildeop'                                                          tilde command "~" behaves like an operator
'mousetime'                                                    max time between mouse double-click
'ttimeoutlen'                                             time out time for key codes in milliseconds
'timeoutlen'                                              time out time in milliseconds
'ttimeout'                                                         time out on mappings
'timeout'                                                          time out on mappings and key codes
'ttimeoutlen'                                                      time out time for key codes in milliseconds
'timeoutlen'                                                       time out time in milliseconds
'redrawtime'                                                       timeout for 'hlsearch' and |:match| highlighting
|:checktime|                                                 check timestamp of loaded buffers
'titlelen'                 percentage of 'columns' used for window title
'titlestring'                     string to use for the Vim window title
'title'                                            let Vim set the title of the window
'titleold'                                                     old title, restored when exiting
|:stjump|                                                     do ":tjump" and split window
|:ptjump|                                                        |:tjump| and show tag in preview window
|:ptlast|                                                        |:tlast| in preview window
|:ptNext|                                                        |:tNext| in preview window
|:ptnext|                                                        |:tnext| in preview window
'pastetoggle'                      key code that causes 'paste' to toggle
'edcompatible'                                                     toggle flags of ":substitute" command
'toolbar'                          GUI: which items to show in the toolbar
'toolbariconsize'                                      size of the toolbar icons (for GTK 2 only)
|:tmenu|                                               define menu tooltip
|:tunmenu|                                             remove menu tooltip
'guitabtooltip'                                        GUI: custom tooltip for a tab page
|:topleft|                             make split window appear at top or far left
|:ptprevious|                                                    |:tprevious| in preview window
|:menutranslate|                                        add a menu translation item
|:undolist|                                 list leafs of the undo tree
'mkspellmem'          memory used before |:mkspell| compresses the tree
|:ptfirst|                                                       |:trewind| in preview window
|:ptrewind|                                                      |:trewind| in preview window
|:noautocmd|                               following command don't trigger autocommands
'cinkeys'                                                keys that trigger indent when 'cindent' is set
'indentkeys'                                             keys that trigger indenting with 'indentexpr'
|:endtry|                                            end previous :try
|:catch|                                                part of a :try command
|:finally|                                              part of a :try command
'guipty'                                                      GUI: try to use a pseudo-tty for ":!" commands
|:stselect|                                                   do ":tselect" and split window
|:tjump|                                                    like ":tselect", but jump directly when there is only one match
|:ptselect|                                                      |:tselect| and show tag in preview window
'guipty'                                  GUI: try to use a pseudo-tty for ":!" commands
|:visual|                                     same as ":edit", but turns off "Ex" mode
'joinspaces'                                                       two spaces after a period with a join command
'foldmethod'                                               folding type
|:filetype|                                            switch file type detection on/off
'buftype'                                                  special type of buffer
'cryptmethod'                                                      type of encryption to use for file writing
'filetype'                                                         type of file, used for autocommands
'ttymouse'                                                         type of mouse codes generated
'selection'                                                   what type of selection to use
'mousehide'                               hide mouse pointer while typing
'imsearch'                                    use :lmap or IM when typing a search pattern
'incsearch'                                  highlight match while typing search pattern
'scroll'                                 lines to scroll with CTRL-U and CTRL-D
|:cunabbrev|                                                like ":unabbrev" but for Command-line mode
|:iunabbrev|                                                like ":unabbrev" but for Insert mode
|:saveas|                                                save file under another name.
|:ascii|                            print ascii value of character under the cursor
|:earlier|                                     go to older change, undo
|:undojoin|                         join next change with previous undo block
'undodir'                                           where to store undo files
|:rundo|                                                      read undo information from a file
'undofile'                                                    save undo information in a file
|:wundo|                                                     write undo information to a file
|:undo|                                                            undo last change(s)
'undoreload'                           max nr of lines to save for undo on a buffer reload
|:undolist|                                      list leafs of the undo tree
'undolevels'                 maximum number of changes that can be undone
|:redo|                                                   redo one undone change
|:sunhide|                                               same as ":unhide"
'ambiwidth'                                        what to do with Unicode chars of ambiguous width
|:setfiletype|                                     set 'filetype', unless it was set already
|:bunload|                                                         unload a specific buffer
'hidden'                                                     don't unload buffer when it is |abandon|ed
|:unlockvar|                                                       unlock variables
|:lunmap|                                                   like ":unmap!" but includes Lang-Arg mode
|:cunmap|                                                   like ":unmap" but for Command-line mode
|:iunmap|                                                   like ":unmap" but for Insert mode
|:nunmap|                                                   like ":unmap" but for Normal mode
|:ounmap|                                                   like ":unmap" but for Operator-pending mode
|:sunmap|                                                   like ":unmap" but for Select mode
|:xunmap|                                                   like ":unmap" but for Visual mode
|:vunmap|                                                   like ":unmap" but for Visual+Select mode
|:enew|                                                edit a new, unnamed buffer
'clipboard'                               use the clipboard as the unnamed register
'confirm'                                     ask what to do about unsaved/read-only files
|:loadkeymap|                           load the following keymaps until EOF
'balloondelay'                delay in mS before a balloon may pop up
'loadplugins'                    load plugin scripts when starting up
'buflisted'                               whether the buffer shows up in the buffer list
|:diffupdate|                                                      update 'diff' buffers
'viminfo'                                        use .viminfo file upon startup and exiting
'smartcase'                        no ignore case when pattern has uppercase
'guifont'                            GUI: Name(s) of font(s) to be used
'guifontset'                  GUI: Names of multi-byte fonts to be used
'guioptions'                 GUI: Which components and options are used
'mkspellmem'                                                memory used before |:mkspell| compresses the tree
'tags'                                          list of file names used by the tag command
'termencoding'                                  character encoding used by the terminal
'printmbcharset'                           CJK character set to be used for :hardcopy
'printheader'                                 format of the header used for :hardcopy
'printfont'                                 name of the font to be used for :hardcopy
'printdevice'                            name of the printer to be used for :hardcopy
'maxmemtot'                              maximum memory (in Kbyte) used for all buffers
'filetype'                                           type of file, used for autocommands
'printmbfont'                                     font names to be used for CJK output of :hardcopy
'fileformat'                                           file format used for file I/O
'commentstring'                             template for comments; used for fold marker
'background'                                    "dark" or "light", used for highlight colors
'completefunc'                                      function to be used for Insert mode completion
'dictionary'                                    list of file names used for keyword completion
'maxmem'                                 maximum memory (in Kbyte) used for one buffer
'maxmempattern'                          maximum memory (in Kbyte) used for pattern search
'printencoding'                                     encoding to be used for printing
'runtimepath'                                  list of directories used for runtime files
'backupext'                                              extension used for the backup file
'numberwidth'                                    number of columns used for the line number
'langmenu'                                          language to be used for the menus
'titlelen'                                 percentage of 'columns' used for window title
'quoteescape'                                    escape characters used in a string
|:scriptencoding|                                         encoding used in sourced Vim script
'encoding'                                                encoding used internally
'foldtext'                                              expression used to display for a closed fold
'define'                                             pattern to be used to find a macro definition
'include'                                            pattern to be used to find an include file
'foldcolumn'                                   width of the column used to indicate folds
'diffexpr'                                              expression used to obtain a diff file
'indentexpr'                                            expression used to obtain the indent of a line
'cedit'                                                        key used to open the command-line window
'patchexpr'                                             expression used to patch a file
'printexpr'                                             expression used to print PostScript for :hardcopy
'includeexpr'                                           expression used to process an include line
'formatlistpat'                                            pattern used to recognize a list header
'spellsuggest'                                           method(s) used to suggest spelling corrections
'foldexpr'                                              expression used when 'foldmethod' is "expr"
'foldmarker'                                               markers used when 'foldmethod' is "marker"
'formatexpr'                                            expression used with "gq" command
'formatprg'                               name of external program used with "gq" command
|:function|                                               define a user function
|:delfunction|                                            delete a user function
|:endfunction|                                            end of a user function
|:return|                                            return from a user function
'maxfuncdepth'                         maximum recursive depth for user functions
|:confirm|                                                  prompt user when confirmation required
|:command|                                                  create user-defined command
|:delcommand|                                               delete user-defined command
|:comclear|                                              clear all user-defined commands
'tabstop'                      number of spaces that <Tab> in file uses
|:lcscope|                                      like ":cscope" but uses location list
|:lhelpgrep|                                  like ":helpgrep" but uses location list
'softtabstop'                          number of spaces that <Tab> uses while editing
'diffopt'                                              options for using diff mode
|:ascii|                                               print ascii value of character under the cursor
|:let|                                                    assign a value to a variable or option
'fileformats'                               automatically detected values for 'fileformat'
|:setglobal|                                           show global values of options
|:unlet|                                                    delete variable
|:let|                                         assign a value to a variable or option
|:lockvar|                                                    lock variables
|:unlockvar|                                                unlock variables
'highlight'                             sets highlighting mode for various occasions
|:wsverb|                                                 pass the verb to workshop over IPC
|:verbose|                                   execute command with 'verbose' set
|:version|                                                   print version number and other info
'patchmode'                                        keep the oldest version of a file
|:vertical|                           make following command split vertically
|:vsplit|                                     split current window vertically
|:vnew|                                 create a new empty window, vertically split
'compatible'                                                behave Vi-compatible as much as possible
'cpoptions'                                              flags for Vi-compatible behavior
|:loadview|                                                   load view for current window from a file
|:mkview|                                                    write view of current window to a file
|:messages|                                                        view previously displayed messages
'autoread'                autom. read file when changed outside of Vim
|:quitall|                                                    quit Vim
|:qall|                                                       quit Vim
|:wqall|                        write all changed buffers and quit Vim
|:xit|                  write if buffer changed and quit window or Vim
|:wq|                           write to a file and quit window or Vim
'iconstring'                                 string to use for the Vim icon text
|:source|                                                     read Vim or Ex commands from a file
|:scriptencoding|                         encoding used in sourced Vim script
|:finish|                                          quit sourcing a Vim script
|:scriptnames|                           list names of all sourced Vim scripts
|:runtime|                                                  source vim scripts in 'runtimepath'
'icon'                                                         let Vim set the text of the window icon
'title'                                                        let Vim set the title of the window
'titlestring'                                string to use for the Vim window title
|:cquit|                                                      quit Vim with an error code
|:quit|                  quit current window (when one window quit Vim)
|:lvimgrepadd|                                               like :vimgrep, but append to current list
|:vimgrepadd|                                                like :vimgrep, but append to current list
|:oldfiles|                      list files that have marks in the viminfo file
|:rviminfo|                                              read from viminfo file
|:wviminfo|                                               write to viminfo file
'viminfo'                                                     use .viminfo file upon startup and exiting
'exrc'                                                       read .vimrc and .exrc in the current directory
'secure'                                  secure mode for reading .vimrc in current dir
'virtualedit'                                          when to use virtual editing
|:startgreplace|                                             start Virtual Replace mode
'visualbell'                                                   use visual bell instead of beeping
|:xmenu|                                              add menu for Visual mode
|:mapclear|                      clear all mappings for Normal and Visual mode
|:xmap|                                        like ":map" but for Visual mode
|:xnoremap|                                like ":noremap" but for Visual mode
|:xnoremenu|                              like ":noremenu" but for Visual mode
|:xunmap|                                    like ":unmap" but for Visual mode
|:xmapclear|                               remove all mappings for Visual mode
|:xunmenu|                                         remove menu for Visual mode
'selectmode'                    when to use Select mode instead of Visual mode
|:vmenu|                                              add menu for Visual+Select mode
|:vmap|                                        like ":map" but for Visual+Select mode
|:vnoremap|                                like ":noremap" but for Visual+Select mode
|:vnoremenu|                              like ":noremenu" but for Visual+Select mode
|:vunmap|                                    like ":unmap" but for Visual+Select mode
|:vmapclear|                               remove all mappings for Visual+Select mode
|:vunmenu|                                         remove menu for Visual+Select mode
|:wincmd|                                   execute a Window (CTRL-W) command
'warn'                                                             warn for shell command when buffer was changed
'warn'                          warn for shell command when buffer was changed
|:setfiletype|                           set 'filetype', unless it was set already
'weirdinvert'                              for terminals that have weird inversion method
|:tabs|                                     list the tab pages and what they contain
'confirm'                                                      ask what to do about unsaved/read-only files
'bufhidden'                                                        what to do when buffer is no longer in window
'ambiwidth'                                                        what to do with Unicode chars of ambiguous width
'viewoptions'                                            specifies what to save for :mkview
'selection'                                                        what type of selection to use
'cinwords'                                                   words where 'si' and 'cin' add an indent
|:ilist|                                                list lines where identifier matches
|:isearch|                                           list one line where identifier matches
|:keepmarks|                         following command keeps marks where they are
|:lockmarks|                         following command keeps marks where they are
'viewdir'                                                directory where to store files with :mkview
'undodir'                                                          where to store undo files
'wrapmargin'                                  chars from the right where wrapping starts
'spellfile'                                                  files where |zg| and |zw| store words
'concealcursor'                                                    whether concealable text is hidden in cursor line
'conceallevel'                                                     whether concealable text is shown or hidden
'buflisted'                                                        whether the buffer shows up in the buffer list
'fsync'                                                            whether to invoke fsync() after file write
'swapfile'                                                         whether to use a swapfile for a buffer
'shelltemp'                                                        whether to use a temp file for shell commands
'foldopen'                                                     for which commands a fold will be opened
'guioptions'                                                  GUI: Which components and options are used
'eadirection'                                                   in which direction 'equalalways' works
'browsedir'                                                        which directory to start browsing in
'rightleftcmd'                                        commands for which editing works right-to-left
'toolbar'                                                     GUI: which items to show in the toolbar
|:endwhile|                                          end previous :while
|:continue|                                            go back to :while
'softtabstop'                     number of spaces that <Tab> uses while editing
'lazyredraw'                                          don't redraw while executing macros
|:break|                                              break out of while loop
'mousehide'                                     hide mouse pointer while typing
'incsearch'                                        highlight match while typing search pattern
'more'                                     pause listings when the whole screen is filled
'guifontwide'                        list of font names for double-wide characters
'ambiwidth'             what to do with Unicode chars of ambiguous width
'textwidth'                                                maximum width of text that is being inserted
'foldcolumn'                                                       width of the column used to indicate folds
'winfixwidth'                                          keep window width when opening/closing windows
'wildchar'                              command-line character for wildcard expansion
'wildcharm'                                                  like 'wildchar' but also works when mapped
'wildmode'                                               mode for 'wildchar' command-line expansion
'foldopen'                               for which commands a fold will be opened
|:noremap|                                    enter a mapping that will not be remapped
|:noremenu|                                      enter a menu that will not be remapped
|:anoremenu|                   enter a new menu for all modes that will not be remapped
|:noreabbrev|                           enter an abbreviation that will not be remapped
'revins'                                      inserting characters will work backwards
|:simalt|                                                          Win32 GUI: simulate Windows ALT key
'restorescreen'                                                    Win32: restore screen when exiting
|:ppop|                                          ":pop" in preview window
'autochdir'            change directory to the file in the current window
|:close|                                             close current window
|:lclose|                                           close location window
|:pclose|                                            close preview window
|:cclose|                                           close quickfix window
|:new|                                          create a new empty window
|:tab|                             create new tab when opening new window
|:helpfind|                                  dialog to open a help window
|:stjump|                                    do ":tjump" and split window
|:stselect|                                do ":tselect" and split window
|:pedit|                                  edit file in the preview window
|:windo|                                   execute command in each window
'cmdwinheight'                          height of the command-line window
'previewheight'                              height of the preview window
'previewwindow'                             identifies the preview window
|:drop|        jump to window editing file or edit file in current window
'cedit'                          key used to open the command-line window
'title'                               let Vim set the title of the window
|:psearch|                like ":ijump" but shows match in preview window
|:diffthis|                             make current window a diff window
'winminwidth'                    minimal number of columns for any window
'winwidth'                   minimal number of columns for current window
'helpheight'                          minimum height of a new help window
'winminheight'                     minimum number of lines for any window
'winheight'                minimum number of lines for the current window
|:help|                                                open a help window
|:lopen|                                             open location window
|:lwindow|                                  open or close location window
|:cwindow|                                  open or close quickfix window
|:copen|                                             open quickfix window
|:options|                                        open the options-window
|:ownsyntax|               set new local syntax highlight for this window
|:ptag|                                        show tag in preview window
|:split|                                             split current window
'diff'                               use diff mode for the current window
'bufhidden'                 what to do when buffer is no longer in window
|:ptjump|                         |:tjump| and show tag in preview window
|:ptlast|                                      |:tlast| in preview window
|:ptNext|                                      |:tNext| in preview window
|:ptnext|                                      |:tnext| in preview window
|:ptprevious|                              |:tprevious| in preview window
|:ptfirst|                                   |:trewind| in preview window
|:ptrewind|                                  |:trewind| in preview window
|:ptselect|                     |:tselect| and show tag in preview window
|:wincmd|                                                execute a Window (CTRL-W) command
|:quit|                                               quit current window (when one window quit Vim)
|:diffthis|                                           make current window a diff window
|:sfind|                                             split current window and edit file in 'path'
|:sview|                                                     split window and edit file read-only
|:scscope|                                                   split window and execute cscope command
|:spelldump|                                                 split window and fill with all correct words
|:sfirst|                                                    split window and go to first file in the argument list
|:srewind|                                                   split window and go to first file in the argument list
|:sbfirst|                                                   split window and go to first file in the buffer list
|:sbrewind|                                                  split window and go to first file in the buffer list
|:sblast|                                                    split window and go to last file in buffer list
|:slast|                                                     split window and go to last file in the argument list
|:sbmodified|                                                split window and go to modified file in the buffer list
|:snext|                                                     split window and go to next file in the argument list
|:sbnext|                                                    split window and go to next file in the buffer list
|:sNext|                                                     split window and go to previous file in argument list
|:sprevious|                                                 split window and go to previous file in the argument list
|:sbNext|                                                    split window and go to previous file in the buffer list
|:sbprevious|                                                split window and go to previous file in the buffer list
|:sargument|                                                 split window and go to specific file in argument list
|:sbuffer|                                                   split window and go to specific file in the buffer list
|:dsplit|                                                    split window and jump to #define
|:stag|                                                      split window and jump to a tag
|:isplit|                                                    split window and jump to definition of identifier
|:botright|                                             make split window appear at bottom or far right
|:topleft|                                              make split window appear at top or far left
|:aboveleft|                                            make split window appear left or above
|:leftabove|                                            make split window appear left or above
|:belowright|                                           make split window appear right or below
|:rightbelow|                                           make split window appear right or below
'cursorbind'                                        move cursor in window as it moves in other windows
'scrollbind'                                             scroll in window as other windows scroll
'guiheadroom'                                 GUI: pixels room for window decorations
|:drop|                                                    jump to window editing file or edit file in current window
'cscopequickfix'                                      use quickfix window for cscope results
|:ball|                                                     open a window for each buffer in the buffer list
|:sall|                                                     open a window for each file in argument list
|:all|                                                      open a window for each file in the argument list
|:sball|                                                    open a window for each file in the buffer list
|:unhide|                                                   open a window for each loaded file in the buffer list
|:loadview|                                  load view for current window from a file
'splitbelow'                                                   new window from split is below the current one
'laststatus'                                       tells when last window has status lines
|:resize|                                           change current window height
'winfixheight'                                                keep window height when opening/closing windows
'icon'                                 let Vim set the text of the window icon
'splitright'                                                   new window is put right of the current one
'rightleft'                                                        window is right-to-left oriented
|:xit|                            write if buffer changed and quit window or Vim
|:wq|                                     write to a file and quit window or Vim
|:winpos|                                               get or set window position
|:quit|                              quit current window (when one window quit Vim)
|:winsize|                                              get or set window size (obsolete)
'titlelen'                        percentage of 'columns' used for window title
'titlestring'                            string to use for the Vim window title
|:mkview|                                    write view of current window to a file
|:vsplit|                                            split current window vertically
'winfixwidth'                                                 keep window width when opening/closing windows
|:vnew|                                         create a new empty window, vertically split
'opendevice'                   allow reading/writing devices on MS-Windows
'winfixheight'             keep window height when opening/closing windows
'winfixwidth'               keep window width when opening/closing windows
'cursorbind'            move cursor in window as it moves in other windows
|:simalt|                                      Win32 GUI: simulate Windows ALT key
'equalalways'                                                      windows are automatically made the same size
|:only|                                                  close all windows except the current one
'scrollbind'                             scroll in window as other windows scroll
'winaltkeys'                                              when the windows system handles ALT keys
|:echon|                                        same as :echo, but without <EOL>
|:spellundo|                                    remove good or bad word
|:spellgood|                                              add good word for spelling
'spellfile'                        files where |zg| and |zw| store words
|:spelldump|                split window and fill with all correct words
|:spellrepall|                                     replace all bad words like last |z=|
'lispwords'                                                        words that change how lisp indenting works
'cinwords'                                                         words where 'si' and 'cin' add an indent
'revins'                                 inserting characters will work backwards
'remap'                                          allow mappings to work recursively
'eadirection'                     in which direction 'equalalways' works
'complete'                      specify how Insert mode completion works
'lispwords'                   words that change how lisp indenting works
'backspace'                                          how backspace works at start of line
'rightleftcmd'                          commands for which editing works right-to-left
'wildcharm'                               like 'wildchar' but also works when mapped
'autowriteall'                                 as 'autowrite', but works with more commands
|:wsverb|                                         pass the verb to workshop over IPC
|:xall|                                                  same as ":wqall"
'wrap'                                                  long lines wrap and continue on the next line
'wrapscan'                                                searches wrap around the end of the file
'linebreak'                                                        wrap long lines at a blank
'showbreak'                          string to use at the start of wrapped lines
'wrapmargin'                            chars from the right where wrapping starts
'fsync'                       whether to invoke fsync() after file write
'endofline'                                                        write <EOL> for last line in file
|:wall|                                                            write all (changed) buffers
|:wqall|                                                           write all changed buffers and quit Vim
|:preserve|                                                        write all text to swap file
|:update|                                                          write buffer if modified
|:mkexrc|                                                          write current mappings and settings to a file
|:mkvimrc|                                                         write current mappings and settings to a file
'autowrite'                                          automatically write file if changed
|:xit|                                                             write if buffer changed and quit window or Vim
'verbosefile'                                              file to write messages in
|:mksession|                                                       write session info to a file
|:write|                                                           write to a file
|:wnext|                                                           write to a file and go to next file in argument list
|:wNext|                                                           write to a file and go to previous file in argument list
|:wprevious|                                                       write to a file and go to previous file in argument list
|:wq|                                                              write to a file and quit window or Vim
'writeany'                                                         write to file with no need for "!" override
|:wviminfo|                                                        write to viminfo file
|:wundo|                                                           write undo information to a file
|:mkview|                                                          write view of current window to a file
'binary'                                                      read/write/edit file in binary mode
'cryptmethod'                   type of encryption to use for file writing
'opendevice'                                         allow reading/writing devices on MS-Windows
'readonly'                                                disallow writing the buffer
'write'                                                            writing to a file is allowed
'imactivatekey'                             key that activates the X input method
'antialias'                                                 Mac OS X: use smooth, antialiased fonts
|:exit|                                                  same as ":xit"
|:yank|                                                            yank lines into a register
|:spellrepall|                    replace all bad words like last |z=|
'spellfile'                                           files where |zg| and |zw| store words
'spellfile'                                  files where |zg| and |zw| store words

 vim:tw=78:fo=tcq2:isk=!-~,^*,^\|,^":ts=8:ft=help:norl:nowrap
